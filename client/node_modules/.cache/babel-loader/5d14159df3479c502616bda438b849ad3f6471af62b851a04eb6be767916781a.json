{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"D:\\\\mern\\\\cab-booking-app\\\\client\\\\src\\\\pages\\\\BookCab.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Map from \"../components/Map\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BookCab = () => {\n  _s();\n  const [pickup, setPickup] = useState(null);\n  const [destination, setDestination] = useState(null);\n  const [pickupAddress, setPickupAddress] = useState(\"\");\n  const [destinationAddress, setDestinationAddress] = useState(\"\");\n  const [cabOptions, setCabOptions] = useState([]);\n  const [selectedCab, setSelectedCab] = useState(null);\n  const [fare, setFare] = useState(null);\n  const [distance, setDistance] = useState(null);\n  const [duration, setDuration] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [showMap, setShowMap] = useState(false);\n  const [locationEntered, setLocationEntered] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Fetch cab options when component mounts\n    const fetchCabOptions = async () => {\n      try {\n        // For demo purposes, we'll create some sample cab options\n        // In a real app, you would fetch this from your API\n        const sampleCabs = [{\n          id: \"1\",\n          name: \"Economy\",\n          description: \"Affordable rides for everyday use\",\n          capacity: 4,\n          baseFare: 50,\n          perKmRate: 12,\n          perMinuteRate: 2,\n          image: \"/placeholder.svg\"\n        }, {\n          id: \"2\",\n          name: \"Premium\",\n          description: \"Comfortable rides with extra space\",\n          capacity: 4,\n          baseFare: 80,\n          perKmRate: 15,\n          perMinuteRate: 3,\n          image: \"/placeholder.svg\"\n        }, {\n          id: \"3\",\n          name: \"SUV\",\n          description: \"Spacious vehicles for groups\",\n          capacity: 6,\n          baseFare: 100,\n          perKmRate: 18,\n          perMinuteRate: 4,\n          image: \"/placeholder.svg\"\n        }];\n        setCabOptions(sampleCabs);\n      } catch (err) {\n        console.error(\"Error fetching cab options:\", err);\n        setError(\"Failed to load cab options\");\n      }\n    };\n    fetchCabOptions();\n  }, []);\n  const handleLocationSelect = (type, location) => {\n    if (type === \"pickup\") {\n      setPickup(location);\n      // In a real app, you would get address from coordinates using geocoding\n      // For now, we'll just use the coordinates\n    } else if (type === \"destination\") {\n      setDestination(location);\n    }\n  };\n  const handleManualLocationEntry = () => {\n    // Simple validation\n    if (!pickupAddress || !destinationAddress) {\n      setError(\"Please enter both pickup and destination addresses\");\n      return;\n    }\n\n    // For demo purposes, we'll create fake coordinates\n    // In a real app, you would use geocoding to convert addresses to coordinates\n    setPickup({\n      lat: 28.6139 + Math.random() * 0.02,\n      lng: 77.209 + Math.random() * 0.02\n    });\n    setDestination({\n      lat: 28.6139 + Math.random() * 0.05,\n      lng: 77.209 + Math.random() * 0.05\n    });\n    setLocationEntered(true);\n    calculateFare();\n  };\n  const calculateFare = () => {\n    // For demo purposes, we'll calculate a simple fare based on random distance\n    // In a real app, you would use a distance matrix API\n\n    // Generate a random distance between 5 and 20 km\n    const randomDistance = 5 + Math.random() * 15;\n    const distanceInKm = Number.parseFloat(randomDistance.toFixed(2));\n\n    // Calculate duration (roughly 2 minutes per km)\n    const durationInMinutes = Math.ceil(distanceInKm * 2);\n    setDistance(distanceInKm);\n    setDuration(durationInMinutes);\n\n    // Calculate fare for each cab type\n    const updatedCabOptions = cabOptions.map(cab => {\n      // Base fare + per km rate + per minute rate\n      const calculatedFare = cab.baseFare + distanceInKm * cab.perKmRate + durationInMinutes * cab.perMinuteRate;\n      return {\n        ...cab,\n        calculatedFare: Math.ceil(calculatedFare) // Round up to nearest rupee\n      };\n    });\n    setCabOptions(updatedCabOptions);\n\n    // If a cab is already selected, update its fare\n    if (selectedCab) {\n      const selectedCabUpdated = updatedCabOptions.find(cab => cab.id === selectedCab.id);\n      if (selectedCabUpdated) {\n        setSelectedCab(selectedCabUpdated);\n        setFare(selectedCabUpdated.calculatedFare);\n      }\n    }\n  };\n  const handleCabSelect = cab => {\n    setSelectedCab(cab);\n    setFare(cab.calculatedFare);\n  };\n  const handleBooking = async () => {\n    if (!pickup || !destination || !selectedCab) {\n      setError(\"Please select pickup, destination and cab type\");\n      return;\n    }\n    try {\n      setLoading(true);\n\n      // In a real app, you would send this data to your API\n      const bookingData = {\n        pickup: {\n          coordinates: pickup,\n          address: pickupAddress\n        },\n        destination: {\n          coordinates: destination,\n          address: destinationAddress\n        },\n        cabType: selectedCab.id,\n        fare: fare,\n        distance: distance,\n        duration: duration\n      };\n      console.log(\"Booking data:\", bookingData);\n\n      // Simulate API call\n      setTimeout(() => {\n        // Generate a random booking ID\n        const bookingId = Math.floor(Math.random() * 1000000);\n        navigate(`/ride/${bookingId}`);\n      }, 1500);\n    } catch (err) {\n      console.error(\"Error booking cab:\", err);\n      setError(\"Failed to book cab. Please try again.\");\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"book-cab-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"form-title\",\n      children: \"Book a Cab\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"location-inputs\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"pickup-input\",\n          children: \"Pickup Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"pickup-input\",\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: \"Enter pickup location\",\n          value: pickupAddress,\n          onChange: e => setPickupAddress(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"destination-input\",\n          children: \"Destination\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"destination-input\",\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: \"Enter destination\",\n          value: destinationAddress,\n          onChange: e => setDestinationAddress(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: handleManualLocationEntry,\n          disabled: !pickupAddress || !destinationAddress,\n          children: \"Find Cabs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          onClick: () => setShowMap(!showMap),\n          children: showMap ? \"Hide Map\" : \"Show Map (Optional)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), showMap && /*#__PURE__*/_jsxDEV(Map, {\n      pickup: pickup,\n      destination: destination,\n      onLocationSelect: handleLocationSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 19\n    }, this), locationEntered && distance && duration && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trip-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Distance: \", distance.toFixed(2), \" km\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Estimated Time: \", duration, \" minutes\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 9\n    }, this), locationEntered && cabOptions.length > 0 && distance && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Select Cab Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cab-options\",\n        children: cabOptions.map(cab => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `cab-option ${selectedCab && selectedCab.id === cab.id ? \"selected\" : \"\"}`,\n          onClick: () => handleCabSelect(cab),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cab-option-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"cab-option-name\",\n              children: cab.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"cab-option-price\",\n              children: [\"\\u20B9\", cab.calculatedFare]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cab-option-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: cab.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Capacity: \", cab.capacity, \" persons\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 17\n          }, this)]\n        }, cab.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), selectedCab && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"booking-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Booking Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Cab Type: \", selectedCab.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Pickup: \", pickupAddress]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Destination: \", destinationAddress]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Distance: \", distance.toFixed(2), \" km\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Estimated Time: \", duration, \" minutes\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Fare: \\u20B9\", fare]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary btn-block\",\n        onClick: handleBooking,\n        disabled: loading,\n        children: loading ? \"Processing...\" : \"Book Now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 5\n  }, this);\n};\n_s(BookCab, \"bmgT0hRB6muF+88Cy6UbEzgvZHE=\", false, function () {\n  return [useNavigate];\n});\n_c = BookCab;\nexport default BookCab;\nvar _c;\n$RefreshReg$(_c, \"BookCab\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","useEffect","useNavigate","Map","jsxDEV","_jsxDEV","Fragment","_Fragment","BookCab","pickup","setPickup","destination","setDestination","pickupAddress","setPickupAddress","destinationAddress","setDestinationAddress","cabOptions","setCabOptions","selectedCab","setSelectedCab","fare","setFare","distance","setDistance","duration","setDuration","loading","setLoading","error","setError","showMap","setShowMap","locationEntered","setLocationEntered","navigate","fetchCabOptions","sampleCabs","id","name","description","capacity","baseFare","perKmRate","perMinuteRate","image","err","console","handleLocationSelect","type","location","handleManualLocationEntry","lat","Math","random","lng","calculateFare","randomDistance","distanceInKm","Number","parseFloat","toFixed","durationInMinutes","ceil","updatedCabOptions","map","cab","calculatedFare","selectedCabUpdated","find","handleCabSelect","handleBooking","bookingData","coordinates","address","cabType","log","setTimeout","bookingId","floor","className","children","fileName","lineNumber","columnNumber","htmlFor","placeholder","value","onChange","e","target","onClick","disabled","onLocationSelect","length","_c","$RefreshReg$"],"sources":["D:/mern/cab-booking-app/client/src/pages/BookCab.js"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from \"react\"\nimport { useNavigate } from \"react-router-dom\"\nimport Map from \"../components/Map\"\n\nconst BookCab = () => {\n  const [pickup, setPickup] = useState(null)\n  const [destination, setDestination] = useState(null)\n  const [pickupAddress, setPickupAddress] = useState(\"\")\n  const [destinationAddress, setDestinationAddress] = useState(\"\")\n  const [cabOptions, setCabOptions] = useState([])\n  const [selectedCab, setSelectedCab] = useState(null)\n  const [fare, setFare] = useState(null)\n  const [distance, setDistance] = useState(null)\n  const [duration, setDuration] = useState(null)\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState(\"\")\n  const [showMap, setShowMap] = useState(false)\n  const [locationEntered, setLocationEntered] = useState(false)\n\n  const navigate = useNavigate()\n\n  useEffect(() => {\n    // Fetch cab options when component mounts\n    const fetchCabOptions = async () => {\n      try {\n        // For demo purposes, we'll create some sample cab options\n        // In a real app, you would fetch this from your API\n        const sampleCabs = [\n          {\n            id: \"1\",\n            name: \"Economy\",\n            description: \"Affordable rides for everyday use\",\n            capacity: 4,\n            baseFare: 50,\n            perKmRate: 12,\n            perMinuteRate: 2,\n            image: \"/placeholder.svg\",\n          },\n          {\n            id: \"2\",\n            name: \"Premium\",\n            description: \"Comfortable rides with extra space\",\n            capacity: 4,\n            baseFare: 80,\n            perKmRate: 15,\n            perMinuteRate: 3,\n            image: \"/placeholder.svg\",\n          },\n          {\n            id: \"3\",\n            name: \"SUV\",\n            description: \"Spacious vehicles for groups\",\n            capacity: 6,\n            baseFare: 100,\n            perKmRate: 18,\n            perMinuteRate: 4,\n            image: \"/placeholder.svg\",\n          },\n        ]\n        setCabOptions(sampleCabs)\n      } catch (err) {\n        console.error(\"Error fetching cab options:\", err)\n        setError(\"Failed to load cab options\")\n      }\n    }\n\n    fetchCabOptions()\n  }, [])\n\n  const handleLocationSelect = (type, location) => {\n    if (type === \"pickup\") {\n      setPickup(location)\n      // In a real app, you would get address from coordinates using geocoding\n      // For now, we'll just use the coordinates\n    } else if (type === \"destination\") {\n      setDestination(location)\n    }\n  }\n\n  const handleManualLocationEntry = () => {\n    // Simple validation\n    if (!pickupAddress || !destinationAddress) {\n      setError(\"Please enter both pickup and destination addresses\")\n      return\n    }\n\n    // For demo purposes, we'll create fake coordinates\n    // In a real app, you would use geocoding to convert addresses to coordinates\n    setPickup({\n      lat: 28.6139 + Math.random() * 0.02,\n      lng: 77.209 + Math.random() * 0.02,\n    })\n\n    setDestination({\n      lat: 28.6139 + Math.random() * 0.05,\n      lng: 77.209 + Math.random() * 0.05,\n    })\n\n    setLocationEntered(true)\n    calculateFare()\n  }\n\n  const calculateFare = () => {\n    // For demo purposes, we'll calculate a simple fare based on random distance\n    // In a real app, you would use a distance matrix API\n\n    // Generate a random distance between 5 and 20 km\n    const randomDistance = 5 + Math.random() * 15\n    const distanceInKm = Number.parseFloat(randomDistance.toFixed(2))\n\n    // Calculate duration (roughly 2 minutes per km)\n    const durationInMinutes = Math.ceil(distanceInKm * 2)\n\n    setDistance(distanceInKm)\n    setDuration(durationInMinutes)\n\n    // Calculate fare for each cab type\n    const updatedCabOptions = cabOptions.map((cab) => {\n      // Base fare + per km rate + per minute rate\n      const calculatedFare = cab.baseFare + distanceInKm * cab.perKmRate + durationInMinutes * cab.perMinuteRate\n      return {\n        ...cab,\n        calculatedFare: Math.ceil(calculatedFare), // Round up to nearest rupee\n      }\n    })\n\n    setCabOptions(updatedCabOptions)\n\n    // If a cab is already selected, update its fare\n    if (selectedCab) {\n      const selectedCabUpdated = updatedCabOptions.find((cab) => cab.id === selectedCab.id)\n      if (selectedCabUpdated) {\n        setSelectedCab(selectedCabUpdated)\n        setFare(selectedCabUpdated.calculatedFare)\n      }\n    }\n  }\n\n  const handleCabSelect = (cab) => {\n    setSelectedCab(cab)\n    setFare(cab.calculatedFare)\n  }\n\n  const handleBooking = async () => {\n    if (!pickup || !destination || !selectedCab) {\n      setError(\"Please select pickup, destination and cab type\")\n      return\n    }\n\n    try {\n      setLoading(true)\n\n      // In a real app, you would send this data to your API\n      const bookingData = {\n        pickup: {\n          coordinates: pickup,\n          address: pickupAddress,\n        },\n        destination: {\n          coordinates: destination,\n          address: destinationAddress,\n        },\n        cabType: selectedCab.id,\n        fare: fare,\n        distance: distance,\n        duration: duration,\n      }\n\n      console.log(\"Booking data:\", bookingData)\n\n      // Simulate API call\n      setTimeout(() => {\n        // Generate a random booking ID\n        const bookingId = Math.floor(Math.random() * 1000000)\n        navigate(`/ride/${bookingId}`)\n      }, 1500)\n    } catch (err) {\n      console.error(\"Error booking cab:\", err)\n      setError(\"Failed to book cab. Please try again.\")\n      setLoading(false)\n    }\n  }\n\n  return (\n    <div className=\"book-cab-container\">\n      <h2 className=\"form-title\">Book a Cab</h2>\n\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n\n      <div className=\"location-inputs\">\n        <div className=\"form-group\">\n          <label htmlFor=\"pickup-input\">Pickup Location</label>\n          <input\n            id=\"pickup-input\"\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Enter pickup location\"\n            value={pickupAddress}\n            onChange={(e) => setPickupAddress(e.target.value)}\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"destination-input\">Destination</label>\n          <input\n            id=\"destination-input\"\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Enter destination\"\n            value={destinationAddress}\n            onChange={(e) => setDestinationAddress(e.target.value)}\n          />\n        </div>\n\n        <div className=\"form-actions\">\n          <button\n            className=\"btn btn-primary\"\n            onClick={handleManualLocationEntry}\n            disabled={!pickupAddress || !destinationAddress}\n          >\n            Find Cabs\n          </button>\n\n          <button className=\"btn btn-secondary\" onClick={() => setShowMap(!showMap)}>\n            {showMap ? \"Hide Map\" : \"Show Map (Optional)\"}\n          </button>\n        </div>\n      </div>\n\n      {showMap && <Map pickup={pickup} destination={destination} onLocationSelect={handleLocationSelect} />}\n\n      {locationEntered && distance && duration && (\n        <div className=\"trip-info\">\n          <p>Distance: {distance.toFixed(2)} km</p>\n          <p>Estimated Time: {duration} minutes</p>\n        </div>\n      )}\n\n      {locationEntered && cabOptions.length > 0 && distance && (\n        <>\n          <h3>Select Cab Type</h3>\n          <div className=\"cab-options\">\n            {cabOptions.map((cab) => (\n              <div\n                key={cab.id}\n                className={`cab-option ${selectedCab && selectedCab.id === cab.id ? \"selected\" : \"\"}`}\n                onClick={() => handleCabSelect(cab)}\n              >\n                <div className=\"cab-option-header\">\n                  <span className=\"cab-option-name\">{cab.name}</span>\n                  <span className=\"cab-option-price\">₹{cab.calculatedFare}</span>\n                </div>\n                <div className=\"cab-option-details\">\n                  <p>{cab.description}</p>\n                  <p>Capacity: {cab.capacity} persons</p>\n                </div>\n              </div>\n            ))}\n          </div>\n        </>\n      )}\n\n      {selectedCab && (\n        <div className=\"booking-summary\">\n          <h3>Booking Summary</h3>\n          <p>Cab Type: {selectedCab.name}</p>\n          <p>Pickup: {pickupAddress}</p>\n          <p>Destination: {destinationAddress}</p>\n          <p>Distance: {distance.toFixed(2)} km</p>\n          <p>Estimated Time: {duration} minutes</p>\n          <p>Fare: ₹{fare}</p>\n\n          <button className=\"btn btn-primary btn-block\" onClick={handleBooking} disabled={loading}>\n            {loading ? \"Processing...\" : \"Book Now\"}\n          </button>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default BookCab\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}