{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"D:\\\\mern\\\\cab-booking-app\\\\client\\\\src\\\\pages\\\\BookCab.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Map from \"../components/Map\";\nimport { indianCities } from \"../data/indian-cities\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BookCab = () => {\n  _s();\n  const [pickup, setPickup] = useState(null);\n  const [destination, setDestination] = useState(null);\n  const [pickupAddress, setPickupAddress] = useState(\"\");\n  const [destinationAddress, setDestinationAddress] = useState(\"\");\n  const [pickupSuggestions, setPickupSuggestions] = useState([]);\n  const [destinationSuggestions, setDestinationSuggestions] = useState([]);\n  const [cabOptions, setCabOptions] = useState([]);\n  const [selectedCab, setSelectedCab] = useState(null);\n  const [fare, setFare] = useState(null);\n  const [distance, setDistance] = useState(null);\n  const [duration, setDuration] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [showMap, setShowMap] = useState(false);\n  const [locationEntered, setLocationEntered] = useState(false);\n  const [driverLocation, setDriverLocation] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Fetch cab options when component mounts\n    const fetchCabOptions = async () => {\n      try {\n        // For demo purposes, we'll create some sample cab options\n        const sampleCabs = [{\n          id: \"1\",\n          name: \"Economy\",\n          description: \"Affordable rides for everyday use\",\n          capacity: 4,\n          baseFare: 50,\n          perKmRate: 12,\n          perMinuteRate: 2,\n          image: \"/placeholder.svg?height=100&width=100&text=Economy\"\n        }, {\n          id: \"2\",\n          name: \"Premium\",\n          description: \"Comfortable rides with extra space\",\n          capacity: 4,\n          baseFare: 80,\n          perKmRate: 15,\n          perMinuteRate: 3,\n          image: \"/placeholder.svg?height=100&width=100&text=Premium\"\n        }, {\n          id: \"3\",\n          name: \"SUV\",\n          description: \"Spacious vehicles for groups\",\n          capacity: 6,\n          baseFare: 100,\n          perKmRate: 18,\n          perMinuteRate: 4,\n          image: \"/placeholder.svg?height=100&width=100&text=SUV\"\n        }];\n        setCabOptions(sampleCabs);\n      } catch (err) {\n        console.error(\"Error fetching cab options:\", err);\n        setError(\"Failed to load cab options\");\n      }\n    };\n    fetchCabOptions();\n  }, []);\n\n  // Handle input change for pickup location\n  const handlePickupChange = e => {\n    const value = e.target.value;\n    setPickupAddress(value);\n    if (value.length > 1) {\n      // Filter cities that match the input\n      const filteredCities = indianCities.filter(city => city.name.toLowerCase().includes(value.toLowerCase()) || city.state.toLowerCase().includes(value.toLowerCase())).slice(0, 5); // Limit to 5 suggestions\n\n      setPickupSuggestions(filteredCities);\n    } else {\n      setPickupSuggestions([]);\n    }\n  };\n\n  // Handle input change for destination\n  const handleDestinationChange = e => {\n    const value = e.target.value;\n    setDestinationAddress(value);\n    if (value.length > 1) {\n      // Filter cities that match the input\n      const filteredCities = indianCities.filter(city => city.name.toLowerCase().includes(value.toLowerCase()) || city.state.toLowerCase().includes(value.toLowerCase())).slice(0, 5); // Limit to 5 suggestions\n\n      setDestinationSuggestions(filteredCities);\n    } else {\n      setDestinationSuggestions([]);\n    }\n  };\n\n  // Handle selection of a city from suggestions\n  const handleSelectCity = (city, type) => {\n    if (type === \"pickup\") {\n      setPickupAddress(`${city.name}, ${city.state}`);\n      setPickup({\n        lat: city.lat,\n        lng: city.lng\n      });\n      setPickupSuggestions([]);\n    } else {\n      setDestinationAddress(`${city.name}, ${city.state}`);\n      setDestination({\n        lat: city.lat,\n        lng: city.lng\n      });\n      setDestinationSuggestions([]);\n    }\n  };\n  const handleLocationSelect = (type, location) => {\n    if (!location) return;\n    try {\n      if (type === \"pickup\") {\n        setPickup(location);\n        // Find the closest city to the selected location\n        const closestCity = findClosestCity(location);\n        if (closestCity) {\n          setPickupAddress(`${closestCity.name}, ${closestCity.state}`);\n        }\n      } else if (type === \"destination\") {\n        setDestination(location);\n        // Find the closest city to the selected location\n        const closestCity = findClosestCity(location);\n        if (closestCity) {\n          setDestinationAddress(`${closestCity.name}, ${closestCity.state}`);\n        }\n      }\n    } catch (error) {\n      console.error(\"Error handling location select:\", error);\n    }\n  };\n\n  // Find the closest city to a given location\n  const findClosestCity = location => {\n    if (!location || !location.lat || !location.lng) return null;\n    let closestCity = null;\n    let minDistance = Number.POSITIVE_INFINITY;\n    indianCities.forEach(city => {\n      if (!city || !city.lat || !city.lng) return;\n      try {\n        const distance = calculateHaversineDistance(location.lat, location.lng, city.lat, city.lng);\n        if (distance < minDistance) {\n          minDistance = distance;\n          closestCity = city;\n        }\n      } catch (error) {\n        console.error(\"Error calculating distance:\", error);\n      }\n    });\n    return closestCity;\n  };\n\n  // Function to calculate distance between two coordinates using Haversine formula\n  const calculateHaversineDistance = (lat1, lon1, lat2, lon2) => {\n    if (!lat1 || !lon1 || !lat2 || !lon2) return 0;\n    try {\n      const R = 6371; // Radius of the Earth in km\n      const dLat = (lat2 - lat1) * Math.PI / 180;\n      const dLon = (lon2 - lon1) * Math.PI / 180;\n      const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n      const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n      const distance = R * c; // Distance in km\n      return distance;\n    } catch (error) {\n      console.error(\"Error in Haversine calculation:\", error);\n      return 0;\n    }\n  };\n  const handleFindCabs = () => {\n    // Simple validation\n    if (!pickup || !destination) {\n      setError(\"Please select both pickup and destination cities\");\n      return;\n    }\n    try {\n      setLocationEntered(true);\n      calculateFareWithCoordinates(pickup, destination);\n\n      // Simulate driver location (halfway between pickup and destination)\n      setTimeout(() => {\n        try {\n          const driverLat = (pickup.lat + destination.lat) / 2;\n          const driverLng = (pickup.lng + destination.lng) / 2;\n\n          // Add a slight random offset to make it more realistic\n          const latOffset = (Math.random() - 0.5) * 0.05;\n          const lngOffset = (Math.random() - 0.5) * 0.05;\n          setDriverLocation({\n            lat: driverLat + latOffset,\n            lng: driverLng + lngOffset\n          });\n        } catch (error) {\n          console.error(\"Error setting driver location:\", error);\n        }\n      }, 1000);\n    } catch (error) {\n      console.error(\"Error finding cabs:\", error);\n      setError(\"An error occurred while finding cabs. Please try again.\");\n    }\n  };\n  const calculateFareWithCoordinates = (pickupCoords, destCoords) => {\n    if (!pickupCoords || !destCoords) return;\n    try {\n      // Calculate actual distance using Haversine formula\n      const distanceInKm = calculateHaversineDistance(pickupCoords.lat, pickupCoords.lng, destCoords.lat, destCoords.lng);\n\n      // Round to 2 decimal places\n      const finalDistance = Math.round(distanceInKm * 100) / 100;\n\n      // Calculate duration (roughly 1.5 minutes per km for long distances)\n      const durationInMinutes = Math.ceil(finalDistance * 1.5);\n      setDistance(finalDistance);\n      setDuration(durationInMinutes);\n\n      // Calculate fare for each cab type\n      const updatedCabOptions = cabOptions.map(cab => {\n        // Base fare + per km rate + per minute rate\n        // For long distances, we'll apply a discount factor\n        const distanceFactor = finalDistance > 100 ? 0.8 : 1; // 20% discount for long trips\n        const calculatedFare = cab.baseFare + finalDistance * cab.perKmRate * distanceFactor + durationInMinutes * cab.perMinuteRate;\n        return {\n          ...cab,\n          calculatedFare: Math.ceil(calculatedFare) // Round up to nearest rupee\n        };\n      });\n      setCabOptions(updatedCabOptions);\n\n      // If a cab is already selected, update its fare\n      if (selectedCab) {\n        const selectedCabUpdated = updatedCabOptions.find(cab => cab.id === selectedCab.id);\n        if (selectedCabUpdated) {\n          setSelectedCab(selectedCabUpdated);\n          setFare(selectedCabUpdated.calculatedFare);\n        }\n      }\n    } catch (error) {\n      console.error(\"Error calculating fare:\", error);\n    }\n  };\n  const handleCabSelect = cab => {\n    setSelectedCab(cab);\n    setFare(cab.calculatedFare);\n  };\n  const handleBooking = async () => {\n    if (!pickup || !destination || !selectedCab) {\n      setError(\"Please select pickup, destination and cab type\");\n      return;\n    }\n    try {\n      setLoading(true);\n\n      // Get the appropriate car image based on cab type\n      let carImage;\n      switch (selectedCab.id) {\n        case \"1\":\n          carImage = \"/placeholder.svg?height=60&width=60&text=Economy\";\n          break;\n        case \"2\":\n          carImage = \"/placeholder.svg?height=60&width=60&text=Premium\";\n          break;\n        case \"3\":\n          carImage = \"/placeholder.svg?height=60&width=60&text=SUV\";\n          break;\n        default:\n          carImage = \"/placeholder.svg?height=60&width=60\";\n      }\n\n      // In a real app, you would send this data to your API\n      const bookingData = {\n        pickup: {\n          coordinates: pickup,\n          address: pickupAddress\n        },\n        destination: {\n          coordinates: destination,\n          address: destinationAddress\n        },\n        cabType: {\n          id: selectedCab.id,\n          name: selectedCab.name\n        },\n        fare: fare,\n        distance: distance,\n        duration: duration,\n        driverLocation: driverLocation,\n        status: \"confirmed\",\n        driver: {\n          name: \"Rahul Kumar\",\n          photo: carImage,\n          vehicleModel: selectedCab.name === \"Economy\" ? \"Maruti Swift\" : selectedCab.name === \"Premium\" ? \"Honda City\" : \"Toyota Innova\",\n          vehicleNumber: \"DL-01-AB-\" + Math.floor(1000 + Math.random() * 9000),\n          phone: \"9876543210\"\n        },\n        paymentMethod: \"Cash\",\n        createdAt: new Date().toISOString()\n      };\n      console.log(\"Booking data:\", bookingData);\n\n      // Store booking data in sessionStorage\n      try {\n        sessionStorage.setItem(\"currentBooking\", JSON.stringify(bookingData));\n      } catch (storageError) {\n        console.error(\"Error storing booking data:\", storageError);\n      }\n\n      // Add to ride history in localStorage\n      try {\n        const existingRides = JSON.parse(localStorage.getItem(\"rideHistory\")) || [];\n        const newRide = {\n          _id: Math.floor(Math.random() * 1000000).toString(),\n          ...bookingData\n        };\n        localStorage.setItem(\"rideHistory\", JSON.stringify([newRide, ...existingRides]));\n      } catch (storageError) {\n        console.error(\"Error storing ride history:\", storageError);\n      }\n\n      // Generate a random booking ID\n      const bookingId = Math.floor(Math.random() * 1000000);\n\n      // Use setTimeout to ensure state updates are complete before navigation\n      setTimeout(() => {\n        try {\n          navigate(`/ride/${bookingId}`);\n        } catch (navError) {\n          console.error(\"Navigation error:\", navError);\n          setError(\"Error navigating to ride details. Please try again.\");\n          setLoading(false);\n        }\n      }, 500);\n    } catch (err) {\n      console.error(\"Error booking cab:\", err);\n      setError(\"Failed to book cab. Please try again.\");\n      setLoading(false);\n    }\n  };\n\n  // Format duration for display\n  const formatDuration = minutes => {\n    if (!minutes) return \"\";\n    const hours = Math.floor(minutes / 60);\n    const mins = minutes % 60;\n    if (hours > 0) {\n      return `${hours} ${hours === 1 ? \"hour\" : \"hours\"}${mins > 0 ? ` ${mins} min` : \"\"}`;\n    }\n    return `${mins} minutes`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"book-cab-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"form-title\",\n      children: \"Book a Cab\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"location-inputs\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"pickup-input\",\n          children: \"Pickup City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"autocomplete-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"pickup-input\",\n            type: \"text\",\n            className: \"form-control\",\n            placeholder: \"Enter pickup city\",\n            value: pickupAddress,\n            onChange: handlePickupChange,\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 13\n          }, this), pickupSuggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"suggestions-list\",\n            children: pickupSuggestions.map((city, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              onClick: () => handleSelectCity(city, \"pickup\"),\n              children: [city.name, \", \", city.state]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"destination-input\",\n          children: \"Destination City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"autocomplete-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"destination-input\",\n            type: \"text\",\n            className: \"form-control\",\n            placeholder: \"Enter destination city\",\n            value: destinationAddress,\n            onChange: handleDestinationChange,\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 13\n          }, this), destinationSuggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"suggestions-list\",\n            children: destinationSuggestions.map((city, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              onClick: () => handleSelectCity(city, \"destination\"),\n              children: [city.name, \", \", city.state]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: handleFindCabs,\n          disabled: !pickup || !destination,\n          children: \"Find Cabs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          onClick: () => setShowMap(!showMap),\n          children: showMap ? \"Hide Map\" : \"Show Map\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 7\n    }, this), showMap && /*#__PURE__*/_jsxDEV(Map, {\n      pickup: pickup,\n      destination: destination,\n      driverLocation: driverLocation,\n      onLocationSelect: handleLocationSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 9\n    }, this), locationEntered && distance && duration && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trip-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"trip-info-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"trip-info-label\",\n          children: \"Distance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"trip-info-value\",\n          children: [distance.toFixed(2), \" km\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"trip-info-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"trip-info-label\",\n          children: \"Estimated Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"trip-info-value\",\n          children: formatDuration(duration)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 11\n      }, this), driverLocation && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"trip-info-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"trip-info-label\",\n          children: \"Driver\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"trip-info-value\",\n          style: {\n            color: \"#22c55e\"\n          },\n          children: \"Available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 9\n    }, this), driverLocation && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"driver-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/placeholder.svg?height=60&width=60\",\n        alt: \"Driver\",\n        style: {\n          width: \"60px\",\n          height: \"60px\",\n          borderRadius: \"50%\",\n          marginRight: \"16px\",\n          objectFit: \"cover\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"driver-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            margin: \"0 0 4px\",\n            fontSize: \"18px\"\n          },\n          children: \"Rahul Kumar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: \"0 0 8px\",\n            fontSize: \"14px\",\n            color: \"#64748b\"\n          },\n          children: \"Maruti Swift \\xB7 DL-01-AB-1234\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"driver-contact\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"driver-contact-btn\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              width: \"16\",\n              height: \"16\",\n              viewBox: \"0 0 24 24\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              strokeWidth: \"2\",\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 534,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 523,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"driver-contact-btn\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              width: \"16\",\n              height: \"16\",\n              viewBox: \"0 0 24 24\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              strokeWidth: \"2\",\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 549,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 538,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 9\n    }, this), locationEntered && cabOptions.length > 0 && distance && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          margin: \"24px 0 16px\",\n          fontSize: \"20px\"\n        },\n        children: \"Select Cab Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cab-options\",\n        children: cabOptions.map(cab => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `cab-option ${selectedCab && selectedCab.id === cab.id ? \"selected\" : \"\"}`,\n          onClick: () => handleCabSelect(cab),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cab-option-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"cab-option-name\",\n              children: cab.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 568,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"cab-option-price\",\n              children: [\"\\u20B9\", cab.calculatedFare]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 569,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cab-option-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: cab.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 572,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Capacity: \", cab.capacity, \" persons\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 573,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 571,\n            columnNumber: 17\n          }, this)]\n        }, cab.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), selectedCab && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"booking-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Booking Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"summary-label\",\n          children: \"Cab Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"summary-value\",\n          children: selectedCab.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 585,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"summary-label\",\n          children: \"Pickup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"summary-value\",\n          children: pickupAddress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 589,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"summary-label\",\n          children: \"Destination\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"summary-value\",\n          children: destinationAddress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"summary-label\",\n          children: \"Distance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"summary-value\",\n          children: [distance.toFixed(2), \" km\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 597,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"summary-label\",\n          children: \"Estimated Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"summary-value\",\n          children: formatDuration(duration)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"summary-label\",\n          children: \"Fare\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 606,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"fare-value\",\n          children: [\"\\u20B9\", fare]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 607,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 605,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary btn-block\",\n        onClick: handleBooking,\n        disabled: loading,\n        children: loading ? \"Processing...\" : \"Book Now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 582,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 410,\n    columnNumber: 5\n  }, this);\n};\n_s(BookCab, \"rAEQZj4WpotodsVN73Ll9+3PDeY=\", false, function () {\n  return [useNavigate];\n});\n_c = BookCab;\nexport default BookCab;\nvar _c;\n$RefreshReg$(_c, \"BookCab\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","useEffect","useNavigate","Map","indianCities","jsxDEV","_jsxDEV","Fragment","_Fragment","BookCab","pickup","setPickup","destination","setDestination","pickupAddress","setPickupAddress","destinationAddress","setDestinationAddress","pickupSuggestions","setPickupSuggestions","destinationSuggestions","setDestinationSuggestions","cabOptions","setCabOptions","selectedCab","setSelectedCab","fare","setFare","distance","setDistance","duration","setDuration","loading","setLoading","error","setError","showMap","setShowMap","locationEntered","setLocationEntered","driverLocation","setDriverLocation","navigate","fetchCabOptions","sampleCabs","id","name","description","capacity","baseFare","perKmRate","perMinuteRate","image","err","console","handlePickupChange","e","value","target","length","filteredCities","filter","city","toLowerCase","includes","state","slice","handleDestinationChange","handleSelectCity","type","lat","lng","handleLocationSelect","location","closestCity","findClosestCity","minDistance","Number","POSITIVE_INFINITY","forEach","calculateHaversineDistance","lat1","lon1","lat2","lon2","R","dLat","Math","PI","dLon","a","sin","cos","c","atan2","sqrt","handleFindCabs","calculateFareWithCoordinates","setTimeout","driverLat","driverLng","latOffset","random","lngOffset","pickupCoords","destCoords","distanceInKm","finalDistance","round","durationInMinutes","ceil","updatedCabOptions","map","cab","distanceFactor","calculatedFare","selectedCabUpdated","find","handleCabSelect","handleBooking","carImage","bookingData","coordinates","address","cabType","status","driver","photo","vehicleModel","vehicleNumber","floor","phone","paymentMethod","createdAt","Date","toISOString","log","sessionStorage","setItem","JSON","stringify","storageError","existingRides","parse","localStorage","getItem","newRide","_id","toString","bookingId","navError","formatDuration","minutes","hours","mins","className","children","fileName","lineNumber","columnNumber","htmlFor","placeholder","onChange","autoComplete","index","onClick","disabled","onLocationSelect","toFixed","style","color","src","alt","width","height","borderRadius","marginRight","objectFit","margin","fontSize","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","_c","$RefreshReg$"],"sources":["D:/mern/cab-booking-app/client/src/pages/BookCab.js"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from \"react\"\nimport { useNavigate } from \"react-router-dom\"\nimport Map from \"../components/Map\"\nimport { indianCities } from \"../data/indian-cities\"\n\nconst BookCab = () => {\n  const [pickup, setPickup] = useState(null)\n  const [destination, setDestination] = useState(null)\n  const [pickupAddress, setPickupAddress] = useState(\"\")\n  const [destinationAddress, setDestinationAddress] = useState(\"\")\n  const [pickupSuggestions, setPickupSuggestions] = useState([])\n  const [destinationSuggestions, setDestinationSuggestions] = useState([])\n  const [cabOptions, setCabOptions] = useState([])\n  const [selectedCab, setSelectedCab] = useState(null)\n  const [fare, setFare] = useState(null)\n  const [distance, setDistance] = useState(null)\n  const [duration, setDuration] = useState(null)\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState(\"\")\n  const [showMap, setShowMap] = useState(false)\n  const [locationEntered, setLocationEntered] = useState(false)\n  const [driverLocation, setDriverLocation] = useState(null)\n\n  const navigate = useNavigate()\n\n  useEffect(() => {\n    // Fetch cab options when component mounts\n    const fetchCabOptions = async () => {\n      try {\n        // For demo purposes, we'll create some sample cab options\n        const sampleCabs = [\n          {\n            id: \"1\",\n            name: \"Economy\",\n            description: \"Affordable rides for everyday use\",\n            capacity: 4,\n            baseFare: 50,\n            perKmRate: 12,\n            perMinuteRate: 2,\n            image: \"/placeholder.svg?height=100&width=100&text=Economy\",\n          },\n          {\n            id: \"2\",\n            name: \"Premium\",\n            description: \"Comfortable rides with extra space\",\n            capacity: 4,\n            baseFare: 80,\n            perKmRate: 15,\n            perMinuteRate: 3,\n            image: \"/placeholder.svg?height=100&width=100&text=Premium\",\n          },\n          {\n            id: \"3\",\n            name: \"SUV\",\n            description: \"Spacious vehicles for groups\",\n            capacity: 6,\n            baseFare: 100,\n            perKmRate: 18,\n            perMinuteRate: 4,\n            image: \"/placeholder.svg?height=100&width=100&text=SUV\",\n          },\n        ]\n        setCabOptions(sampleCabs)\n      } catch (err) {\n        console.error(\"Error fetching cab options:\", err)\n        setError(\"Failed to load cab options\")\n      }\n    }\n\n    fetchCabOptions()\n  }, [])\n\n  // Handle input change for pickup location\n  const handlePickupChange = (e) => {\n    const value = e.target.value\n    setPickupAddress(value)\n\n    if (value.length > 1) {\n      // Filter cities that match the input\n      const filteredCities = indianCities\n        .filter(\n          (city) =>\n            city.name.toLowerCase().includes(value.toLowerCase()) ||\n            city.state.toLowerCase().includes(value.toLowerCase()),\n        )\n        .slice(0, 5) // Limit to 5 suggestions\n\n      setPickupSuggestions(filteredCities)\n    } else {\n      setPickupSuggestions([])\n    }\n  }\n\n  // Handle input change for destination\n  const handleDestinationChange = (e) => {\n    const value = e.target.value\n    setDestinationAddress(value)\n\n    if (value.length > 1) {\n      // Filter cities that match the input\n      const filteredCities = indianCities\n        .filter(\n          (city) =>\n            city.name.toLowerCase().includes(value.toLowerCase()) ||\n            city.state.toLowerCase().includes(value.toLowerCase()),\n        )\n        .slice(0, 5) // Limit to 5 suggestions\n\n      setDestinationSuggestions(filteredCities)\n    } else {\n      setDestinationSuggestions([])\n    }\n  }\n\n  // Handle selection of a city from suggestions\n  const handleSelectCity = (city, type) => {\n    if (type === \"pickup\") {\n      setPickupAddress(`${city.name}, ${city.state}`)\n      setPickup({\n        lat: city.lat,\n        lng: city.lng,\n      })\n      setPickupSuggestions([])\n    } else {\n      setDestinationAddress(`${city.name}, ${city.state}`)\n      setDestination({\n        lat: city.lat,\n        lng: city.lng,\n      })\n      setDestinationSuggestions([])\n    }\n  }\n\n  const handleLocationSelect = (type, location) => {\n    if (!location) return\n\n    try {\n      if (type === \"pickup\") {\n        setPickup(location)\n        // Find the closest city to the selected location\n        const closestCity = findClosestCity(location)\n        if (closestCity) {\n          setPickupAddress(`${closestCity.name}, ${closestCity.state}`)\n        }\n      } else if (type === \"destination\") {\n        setDestination(location)\n        // Find the closest city to the selected location\n        const closestCity = findClosestCity(location)\n        if (closestCity) {\n          setDestinationAddress(`${closestCity.name}, ${closestCity.state}`)\n        }\n      }\n    } catch (error) {\n      console.error(\"Error handling location select:\", error)\n    }\n  }\n\n  // Find the closest city to a given location\n  const findClosestCity = (location) => {\n    if (!location || !location.lat || !location.lng) return null\n\n    let closestCity = null\n    let minDistance = Number.POSITIVE_INFINITY\n\n    indianCities.forEach((city) => {\n      if (!city || !city.lat || !city.lng) return\n\n      try {\n        const distance = calculateHaversineDistance(location.lat, location.lng, city.lat, city.lng)\n\n        if (distance < minDistance) {\n          minDistance = distance\n          closestCity = city\n        }\n      } catch (error) {\n        console.error(\"Error calculating distance:\", error)\n      }\n    })\n\n    return closestCity\n  }\n\n  // Function to calculate distance between two coordinates using Haversine formula\n  const calculateHaversineDistance = (lat1, lon1, lat2, lon2) => {\n    if (!lat1 || !lon1 || !lat2 || !lon2) return 0\n\n    try {\n      const R = 6371 // Radius of the Earth in km\n      const dLat = ((lat2 - lat1) * Math.PI) / 180\n      const dLon = ((lon2 - lon1) * Math.PI) / 180\n      const a =\n        Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n        Math.cos((lat1 * Math.PI) / 180) * Math.cos((lat2 * Math.PI) / 180) * Math.sin(dLon / 2) * Math.sin(dLon / 2)\n      const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a))\n      const distance = R * c // Distance in km\n      return distance\n    } catch (error) {\n      console.error(\"Error in Haversine calculation:\", error)\n      return 0\n    }\n  }\n\n  const handleFindCabs = () => {\n    // Simple validation\n    if (!pickup || !destination) {\n      setError(\"Please select both pickup and destination cities\")\n      return\n    }\n\n    try {\n      setLocationEntered(true)\n      calculateFareWithCoordinates(pickup, destination)\n\n      // Simulate driver location (halfway between pickup and destination)\n      setTimeout(() => {\n        try {\n          const driverLat = (pickup.lat + destination.lat) / 2\n          const driverLng = (pickup.lng + destination.lng) / 2\n\n          // Add a slight random offset to make it more realistic\n          const latOffset = (Math.random() - 0.5) * 0.05\n          const lngOffset = (Math.random() - 0.5) * 0.05\n\n          setDriverLocation({\n            lat: driverLat + latOffset,\n            lng: driverLng + lngOffset,\n          })\n        } catch (error) {\n          console.error(\"Error setting driver location:\", error)\n        }\n      }, 1000)\n    } catch (error) {\n      console.error(\"Error finding cabs:\", error)\n      setError(\"An error occurred while finding cabs. Please try again.\")\n    }\n  }\n\n  const calculateFareWithCoordinates = (pickupCoords, destCoords) => {\n    if (!pickupCoords || !destCoords) return\n\n    try {\n      // Calculate actual distance using Haversine formula\n      const distanceInKm = calculateHaversineDistance(\n        pickupCoords.lat,\n        pickupCoords.lng,\n        destCoords.lat,\n        destCoords.lng,\n      )\n\n      // Round to 2 decimal places\n      const finalDistance = Math.round(distanceInKm * 100) / 100\n\n      // Calculate duration (roughly 1.5 minutes per km for long distances)\n      const durationInMinutes = Math.ceil(finalDistance * 1.5)\n\n      setDistance(finalDistance)\n      setDuration(durationInMinutes)\n\n      // Calculate fare for each cab type\n      const updatedCabOptions = cabOptions.map((cab) => {\n        // Base fare + per km rate + per minute rate\n        // For long distances, we'll apply a discount factor\n        const distanceFactor = finalDistance > 100 ? 0.8 : 1 // 20% discount for long trips\n        const calculatedFare =\n          cab.baseFare + finalDistance * cab.perKmRate * distanceFactor + durationInMinutes * cab.perMinuteRate\n        return {\n          ...cab,\n          calculatedFare: Math.ceil(calculatedFare), // Round up to nearest rupee\n        }\n      })\n\n      setCabOptions(updatedCabOptions)\n\n      // If a cab is already selected, update its fare\n      if (selectedCab) {\n        const selectedCabUpdated = updatedCabOptions.find((cab) => cab.id === selectedCab.id)\n        if (selectedCabUpdated) {\n          setSelectedCab(selectedCabUpdated)\n          setFare(selectedCabUpdated.calculatedFare)\n        }\n      }\n    } catch (error) {\n      console.error(\"Error calculating fare:\", error)\n    }\n  }\n\n  const handleCabSelect = (cab) => {\n    setSelectedCab(cab)\n    setFare(cab.calculatedFare)\n  }\n\n  const handleBooking = async () => {\n    if (!pickup || !destination || !selectedCab) {\n      setError(\"Please select pickup, destination and cab type\")\n      return\n    }\n\n    try {\n      setLoading(true)\n\n      // Get the appropriate car image based on cab type\n      let carImage\n      switch (selectedCab.id) {\n        case \"1\":\n          carImage = \"/placeholder.svg?height=60&width=60&text=Economy\"\n          break\n        case \"2\":\n          carImage = \"/placeholder.svg?height=60&width=60&text=Premium\"\n          break\n        case \"3\":\n          carImage = \"/placeholder.svg?height=60&width=60&text=SUV\"\n          break\n        default:\n          carImage = \"/placeholder.svg?height=60&width=60\"\n      }\n\n      // In a real app, you would send this data to your API\n      const bookingData = {\n        pickup: {\n          coordinates: pickup,\n          address: pickupAddress,\n        },\n        destination: {\n          coordinates: destination,\n          address: destinationAddress,\n        },\n        cabType: {\n          id: selectedCab.id,\n          name: selectedCab.name,\n        },\n        fare: fare,\n        distance: distance,\n        duration: duration,\n        driverLocation: driverLocation,\n        status: \"confirmed\",\n        driver: {\n          name: \"Rahul Kumar\",\n          photo: carImage,\n          vehicleModel:\n            selectedCab.name === \"Economy\"\n              ? \"Maruti Swift\"\n              : selectedCab.name === \"Premium\"\n                ? \"Honda City\"\n                : \"Toyota Innova\",\n          vehicleNumber: \"DL-01-AB-\" + Math.floor(1000 + Math.random() * 9000),\n          phone: \"9876543210\",\n        },\n        paymentMethod: \"Cash\",\n        createdAt: new Date().toISOString(),\n      }\n\n      console.log(\"Booking data:\", bookingData)\n\n      // Store booking data in sessionStorage\n      try {\n        sessionStorage.setItem(\"currentBooking\", JSON.stringify(bookingData))\n      } catch (storageError) {\n        console.error(\"Error storing booking data:\", storageError)\n      }\n\n      // Add to ride history in localStorage\n      try {\n        const existingRides = JSON.parse(localStorage.getItem(\"rideHistory\")) || []\n        const newRide = {\n          _id: Math.floor(Math.random() * 1000000).toString(),\n          ...bookingData,\n        }\n\n        localStorage.setItem(\"rideHistory\", JSON.stringify([newRide, ...existingRides]))\n      } catch (storageError) {\n        console.error(\"Error storing ride history:\", storageError)\n      }\n\n      // Generate a random booking ID\n      const bookingId = Math.floor(Math.random() * 1000000)\n\n      // Use setTimeout to ensure state updates are complete before navigation\n      setTimeout(() => {\n        try {\n          navigate(`/ride/${bookingId}`)\n        } catch (navError) {\n          console.error(\"Navigation error:\", navError)\n          setError(\"Error navigating to ride details. Please try again.\")\n          setLoading(false)\n        }\n      }, 500)\n    } catch (err) {\n      console.error(\"Error booking cab:\", err)\n      setError(\"Failed to book cab. Please try again.\")\n      setLoading(false)\n    }\n  }\n\n  // Format duration for display\n  const formatDuration = (minutes) => {\n    if (!minutes) return \"\"\n\n    const hours = Math.floor(minutes / 60)\n    const mins = minutes % 60\n\n    if (hours > 0) {\n      return `${hours} ${hours === 1 ? \"hour\" : \"hours\"}${mins > 0 ? ` ${mins} min` : \"\"}`\n    }\n    return `${mins} minutes`\n  }\n\n  return (\n    <div className=\"book-cab-container\">\n      <h2 className=\"form-title\">Book a Cab</h2>\n\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n\n      <div className=\"location-inputs\">\n        <div className=\"form-group\">\n          <label htmlFor=\"pickup-input\">Pickup City</label>\n          <div className=\"autocomplete-container\">\n            <input\n              id=\"pickup-input\"\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Enter pickup city\"\n              value={pickupAddress}\n              onChange={handlePickupChange}\n              autoComplete=\"off\"\n            />\n            {pickupSuggestions.length > 0 && (\n              <ul className=\"suggestions-list\">\n                {pickupSuggestions.map((city, index) => (\n                  <li key={index} onClick={() => handleSelectCity(city, \"pickup\")}>\n                    {city.name}, {city.state}\n                  </li>\n                ))}\n              </ul>\n            )}\n          </div>\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"destination-input\">Destination City</label>\n          <div className=\"autocomplete-container\">\n            <input\n              id=\"destination-input\"\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Enter destination city\"\n              value={destinationAddress}\n              onChange={handleDestinationChange}\n              autoComplete=\"off\"\n            />\n            {destinationSuggestions.length > 0 && (\n              <ul className=\"suggestions-list\">\n                {destinationSuggestions.map((city, index) => (\n                  <li key={index} onClick={() => handleSelectCity(city, \"destination\")}>\n                    {city.name}, {city.state}\n                  </li>\n                ))}\n              </ul>\n            )}\n          </div>\n        </div>\n\n        <div className=\"form-actions\">\n          <button className=\"btn btn-primary\" onClick={handleFindCabs} disabled={!pickup || !destination}>\n            Find Cabs\n          </button>\n\n          <button className=\"btn btn-secondary\" onClick={() => setShowMap(!showMap)}>\n            {showMap ? \"Hide Map\" : \"Show Map\"}\n          </button>\n        </div>\n      </div>\n\n      {showMap && (\n        <Map\n          pickup={pickup}\n          destination={destination}\n          driverLocation={driverLocation}\n          onLocationSelect={handleLocationSelect}\n        />\n      )}\n\n      {locationEntered && distance && duration && (\n        <div className=\"trip-info\">\n          <div className=\"trip-info-item\">\n            <span className=\"trip-info-label\">Distance</span>\n            <span className=\"trip-info-value\">{distance.toFixed(2)} km</span>\n          </div>\n          <div className=\"trip-info-item\">\n            <span className=\"trip-info-label\">Estimated Time</span>\n            <span className=\"trip-info-value\">{formatDuration(duration)}</span>\n          </div>\n          {driverLocation && (\n            <div className=\"trip-info-item\">\n              <span className=\"trip-info-label\">Driver</span>\n              <span className=\"trip-info-value\" style={{ color: \"#22c55e\" }}>\n                Available\n              </span>\n            </div>\n          )}\n        </div>\n      )}\n\n      {driverLocation && (\n        <div className=\"driver-card\">\n          <img\n            src=\"/placeholder.svg?height=60&width=60\"\n            alt=\"Driver\"\n            style={{\n              width: \"60px\",\n              height: \"60px\",\n              borderRadius: \"50%\",\n              marginRight: \"16px\",\n              objectFit: \"cover\",\n            }}\n          />\n          <div className=\"driver-details\">\n            <h3 style={{ margin: \"0 0 4px\", fontSize: \"18px\" }}>Rahul Kumar</h3>\n            <p style={{ margin: \"0 0 8px\", fontSize: \"14px\", color: \"#64748b\" }}>Maruti Swift · DL-01-AB-1234</p>\n            <div className=\"driver-contact\">\n              <div className=\"driver-contact-btn\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"16\"\n                  height=\"16\"\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                >\n                  <path d=\"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z\"></path>\n                </svg>\n              </div>\n              <div className=\"driver-contact-btn\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"16\"\n                  height=\"16\"\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                >\n                  <path d=\"M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z\"></path>\n                </svg>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {locationEntered && cabOptions.length > 0 && distance && (\n        <>\n          <h3 style={{ margin: \"24px 0 16px\", fontSize: \"20px\" }}>Select Cab Type</h3>\n          <div className=\"cab-options\">\n            {cabOptions.map((cab) => (\n              <div\n                key={cab.id}\n                className={`cab-option ${selectedCab && selectedCab.id === cab.id ? \"selected\" : \"\"}`}\n                onClick={() => handleCabSelect(cab)}\n              >\n                <div className=\"cab-option-header\">\n                  <span className=\"cab-option-name\">{cab.name}</span>\n                  <span className=\"cab-option-price\">₹{cab.calculatedFare}</span>\n                </div>\n                <div className=\"cab-option-details\">\n                  <p>{cab.description}</p>\n                  <p>Capacity: {cab.capacity} persons</p>\n                </div>\n              </div>\n            ))}\n          </div>\n        </>\n      )}\n\n      {selectedCab && (\n        <div className=\"booking-summary\">\n          <h3>Booking Summary</h3>\n\n          <p>\n            <span className=\"summary-label\">Cab Type</span>\n            <span className=\"summary-value\">{selectedCab.name}</span>\n          </p>\n          <p>\n            <span className=\"summary-label\">Pickup</span>\n            <span className=\"summary-value\">{pickupAddress}</span>\n          </p>\n          <p>\n            <span className=\"summary-label\">Destination</span>\n            <span className=\"summary-value\">{destinationAddress}</span>\n          </p>\n          <p>\n            <span className=\"summary-label\">Distance</span>\n            <span className=\"summary-value\">{distance.toFixed(2)} km</span>\n          </p>\n          <p>\n            <span className=\"summary-label\">Estimated Time</span>\n            <span className=\"summary-value\">{formatDuration(duration)}</span>\n          </p>\n          <p>\n            <span className=\"summary-label\">Fare</span>\n            <span className=\"fare-value\">₹{fare}</span>\n          </p>\n\n          <button className=\"btn btn-primary btn-block\" onClick={handleBooking} disabled={loading}>\n            {loading ? \"Processing...\" : \"Book Now\"}\n          </button>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default BookCab\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}