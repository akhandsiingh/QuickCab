{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"D:\\\\mern\\\\cab-booking-app\\\\client\\\\src\\\\components\\\\Map.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Map = ({\n  pickup,\n  destination,\n  onLocationSelect\n}) => {\n  _s();\n  const mapRef = useRef(null);\n  const mapInstanceRef = useRef(null);\n  const markersRef = useRef([]);\n  useEffect(() => {\n    // Initialize the map using OpenStreetMap with Leaflet\n    initMap();\n    return () => {\n      // Clean up\n      if (mapInstanceRef.current) {\n        mapInstanceRef.current.remove();\n      }\n    };\n  }, []);\n  useEffect(() => {\n    if (mapInstanceRef.current) {\n      // Clear existing markers\n      markersRef.current.forEach(marker => {\n        if (marker && marker.remove) {\n          marker.remove();\n        }\n      });\n      markersRef.current = [];\n\n      // Add markers for pickup and destination if they exist\n      if (pickup && pickup.lat && pickup.lng) {\n        addMarker(pickup, \"Pickup Location\", \"green\");\n      }\n      if (destination && destination.lat && destination.lng) {\n        addMarker(destination, \"Destination\", \"red\");\n      }\n\n      // If both points exist, draw a route between them\n      if (pickup && pickup.lat && pickup.lng && destination && destination.lat && destination.lng) {\n        drawRoute(pickup, destination);\n      }\n    }\n  }, [pickup, destination]);\n  const initMap = () => {\n    // Check if Leaflet is available\n    if (!window.L) {\n      // Load Leaflet CSS\n      const linkElement = document.createElement(\"link\");\n      linkElement.rel = \"stylesheet\";\n      linkElement.href = \"https://unpkg.com/leaflet@1.9.4/dist/leaflet.css\";\n      document.head.appendChild(linkElement);\n\n      // Load Leaflet JS\n      const script = document.createElement(\"script\");\n      script.src = \"https://unpkg.com/leaflet@1.9.4/dist/leaflet.js\";\n      script.async = true;\n      script.onload = createMap;\n      document.head.appendChild(script);\n    } else {\n      createMap();\n    }\n  };\n  const createMap = () => {\n    if (!window.L) return;\n\n    // Default to center of India if no location is provided\n    const defaultLocation = {\n      lat: 20.5937,\n      lng: 78.9629\n    };\n\n    // Create map\n    const map = window.L.map(mapRef.current).setView([defaultLocation.lat, defaultLocation.lng], 12);\n\n    // Add OpenStreetMap tiles\n    window.L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n      attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n    }).addTo(map);\n    mapInstanceRef.current = map;\n\n    // Try to get user's current location\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const userLocation = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n        map.setView([userLocation.lat, userLocation.lng], 14);\n\n        // If onLocationSelect is provided, call it with the user's location\n        if (onLocationSelect && !pickup) {\n          onLocationSelect(\"pickup\", userLocation);\n        }\n      }, () => {\n        console.log(\"Error: The Geolocation service failed.\");\n      });\n    }\n\n    // Add click listener to map\n    map.on(\"click\", e => {\n      if (onLocationSelect) {\n        // Determine if we're setting pickup or destination\n        if (!pickup) {\n          onLocationSelect(\"pickup\", {\n            lat: e.latlng.lat,\n            lng: e.latlng.lng\n          });\n        } else if (!destination) {\n          onLocationSelect(\"destination\", {\n            lat: e.latlng.lat,\n            lng: e.latlng.lng\n          });\n        }\n      }\n    });\n  };\n  const addMarker = (position, title, color) => {\n    if (!window.L || !mapInstanceRef.current) return;\n\n    // Create a custom icon\n    const icon = window.L.divIcon({\n      className: \"custom-marker\",\n      html: `<div style=\"background-color: ${color}; width: 20px; height: 20px; border-radius: 50%; border: 2px solid white;\"></div>`,\n      iconSize: [20, 20],\n      iconAnchor: [10, 10]\n    });\n\n    // Add marker\n    const marker = window.L.marker([position.lat, position.lng], {\n      icon\n    }).addTo(mapInstanceRef.current);\n    marker.bindPopup(title);\n    markersRef.current.push(marker);\n  };\n  const drawRoute = (origin, destination) => {\n    if (!window.L || !mapInstanceRef.current) return;\n\n    // For a simple demo, we'll just draw a straight line\n    // In a real app, you would use a routing service like OSRM or GraphHopper\n    const points = [[origin.lat, origin.lng], [destination.lat, destination.lng]];\n    const line = window.L.polyline(points, {\n      color: \"blue\",\n      weight: 4,\n      opacity: 0.7\n    }).addTo(mapInstanceRef.current);\n    markersRef.current.push(line);\n\n    // Fit the map to show the route\n    mapInstanceRef.current.fitBounds(line.getBounds(), {\n      padding: [50, 50]\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mapRef,\n    className: \"map-container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 10\n  }, this);\n};\n_s(Map, \"HfxYcnpQhQPTJOnowaWcPQZAg+0=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useEffect","useRef","jsxDEV","_jsxDEV","Map","pickup","destination","onLocationSelect","mapRef","mapInstanceRef","markersRef","initMap","current","remove","forEach","marker","lat","lng","addMarker","drawRoute","window","L","linkElement","document","createElement","rel","href","head","appendChild","script","src","async","onload","createMap","defaultLocation","map","setView","tileLayer","attribution","addTo","navigator","geolocation","getCurrentPosition","position","userLocation","coords","latitude","longitude","console","log","on","e","latlng","title","color","icon","divIcon","className","html","iconSize","iconAnchor","bindPopup","push","origin","points","line","polyline","weight","opacity","fitBounds","getBounds","padding","ref","fileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/mern/cab-booking-app/client/src/components/Map.js"],"sourcesContent":["\"use client\"\n\nimport { useEffect, useRef } from \"react\"\n\nconst Map = ({ pickup, destination, onLocationSelect }) => {\n  const mapRef = useRef(null)\n  const mapInstanceRef = useRef(null)\n  const markersRef = useRef([])\n\n  useEffect(() => {\n    // Initialize the map using OpenStreetMap with Leaflet\n    initMap()\n\n    return () => {\n      // Clean up\n      if (mapInstanceRef.current) {\n        mapInstanceRef.current.remove()\n      }\n    }\n  }, [])\n\n  useEffect(() => {\n    if (mapInstanceRef.current) {\n      // Clear existing markers\n      markersRef.current.forEach((marker) => {\n        if (marker && marker.remove) {\n          marker.remove()\n        }\n      })\n      markersRef.current = []\n\n      // Add markers for pickup and destination if they exist\n      if (pickup && pickup.lat && pickup.lng) {\n        addMarker(pickup, \"Pickup Location\", \"green\")\n      }\n\n      if (destination && destination.lat && destination.lng) {\n        addMarker(destination, \"Destination\", \"red\")\n      }\n\n      // If both points exist, draw a route between them\n      if (pickup && pickup.lat && pickup.lng && destination && destination.lat && destination.lng) {\n        drawRoute(pickup, destination)\n      }\n    }\n  }, [pickup, destination])\n\n  const initMap = () => {\n    // Check if Leaflet is available\n    if (!window.L) {\n      // Load Leaflet CSS\n      const linkElement = document.createElement(\"link\")\n      linkElement.rel = \"stylesheet\"\n      linkElement.href = \"https://unpkg.com/leaflet@1.9.4/dist/leaflet.css\"\n      document.head.appendChild(linkElement)\n\n      // Load Leaflet JS\n      const script = document.createElement(\"script\")\n      script.src = \"https://unpkg.com/leaflet@1.9.4/dist/leaflet.js\"\n      script.async = true\n      script.onload = createMap\n      document.head.appendChild(script)\n    } else {\n      createMap()\n    }\n  }\n\n  const createMap = () => {\n    if (!window.L) return\n\n    // Default to center of India if no location is provided\n    const defaultLocation = { lat: 20.5937, lng: 78.9629 }\n\n    // Create map\n    const map = window.L.map(mapRef.current).setView([defaultLocation.lat, defaultLocation.lng], 12)\n\n    // Add OpenStreetMap tiles\n    window.L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n      attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n    }).addTo(map)\n\n    mapInstanceRef.current = map\n\n    // Try to get user's current location\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          const userLocation = {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude,\n          }\n          map.setView([userLocation.lat, userLocation.lng], 14)\n\n          // If onLocationSelect is provided, call it with the user's location\n          if (onLocationSelect && !pickup) {\n            onLocationSelect(\"pickup\", userLocation)\n          }\n        },\n        () => {\n          console.log(\"Error: The Geolocation service failed.\")\n        },\n      )\n    }\n\n    // Add click listener to map\n    map.on(\"click\", (e) => {\n      if (onLocationSelect) {\n        // Determine if we're setting pickup or destination\n        if (!pickup) {\n          onLocationSelect(\"pickup\", { lat: e.latlng.lat, lng: e.latlng.lng })\n        } else if (!destination) {\n          onLocationSelect(\"destination\", { lat: e.latlng.lat, lng: e.latlng.lng })\n        }\n      }\n    })\n  }\n\n  const addMarker = (position, title, color) => {\n    if (!window.L || !mapInstanceRef.current) return\n\n    // Create a custom icon\n    const icon = window.L.divIcon({\n      className: \"custom-marker\",\n      html: `<div style=\"background-color: ${color}; width: 20px; height: 20px; border-radius: 50%; border: 2px solid white;\"></div>`,\n      iconSize: [20, 20],\n      iconAnchor: [10, 10],\n    })\n\n    // Add marker\n    const marker = window.L.marker([position.lat, position.lng], { icon }).addTo(mapInstanceRef.current)\n    marker.bindPopup(title)\n    markersRef.current.push(marker)\n  }\n\n  const drawRoute = (origin, destination) => {\n    if (!window.L || !mapInstanceRef.current) return\n\n    // For a simple demo, we'll just draw a straight line\n    // In a real app, you would use a routing service like OSRM or GraphHopper\n    const points = [\n      [origin.lat, origin.lng],\n      [destination.lat, destination.lng],\n    ]\n\n    const line = window.L.polyline(points, {\n      color: \"blue\",\n      weight: 4,\n      opacity: 0.7,\n    }).addTo(mapInstanceRef.current)\n\n    markersRef.current.push(line)\n\n    // Fit the map to show the route\n    mapInstanceRef.current.fitBounds(line.getBounds(), {\n      padding: [50, 50],\n    })\n  }\n\n  return <div ref={mapRef} className=\"map-container\"></div>\n}\n\nexport default Map\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}