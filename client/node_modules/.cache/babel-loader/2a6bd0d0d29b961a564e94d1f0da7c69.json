{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"D:\\\\mern\\\\cab-booking-app\\\\client\\\\src\\\\pages\\\\driver\\\\DriverDashboard.js\";\nimport { useState, useEffect, useContext } from \"react\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport Map from \"../../components/Map\";\nconst DriverDashboard = () => {\n  const {\n    user,\n    updateDriverStatus\n  } = useContext(AuthContext);\n  const [isAvailable, setIsAvailable] = useState((user === null || user === void 0 ? void 0 : user.isAvailable) || false);\n  const [currentLocation, setCurrentLocation] = useState(null);\n  const [currentRide, setCurrentRide] = useState(null);\n  const [rideHistory, setRideHistory] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    // Get driver's current location\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        setCurrentLocation({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        });\n      }, () => {\n        setError(\"Could not get your location. Please enable location services.\");\n      });\n    } else {\n      setError(\"Geolocation is not supported by your browser.\");\n    }\n\n    // For demo purposes, we'll use localStorage to get ride history\n    try {\n      const storedRides = localStorage.getItem(\"rideHistory\");\n      if (storedRides) {\n        const rides = JSON.parse(storedRides);\n        // Filter rides assigned to this driver (in a real app, this would come from the API)\n        const driverRides = rides.filter(ride => ride.driver && ride.driver.name === (user === null || user === void 0 ? void 0 : user.name));\n\n        // Find current ride (if any)\n        const active = driverRides.find(ride => ride.status === \"confirmed\" || ride.status === \"in-progress\");\n        if (active) {\n          setCurrentRide(active);\n        }\n        setRideHistory(driverRides.filter(ride => ride.status === \"completed\"));\n      }\n    } catch (err) {\n      console.error(\"Error loading ride history:\", err);\n    }\n    setLoading(false);\n  }, [user]);\n  const handleStatusChange = async () => {\n    const newStatus = !isAvailable;\n    const result = await updateDriverStatus(newStatus);\n    if (result.success) {\n      setIsAvailable(newStatus);\n    } else {\n      setError(result.error);\n    }\n  };\n  const handleStartRide = () => {\n    if (!currentRide) return;\n    try {\n      // Update ride status to in-progress\n      const updatedRide = {\n        ...currentRide,\n        status: \"in-progress\"\n      };\n      setCurrentRide(updatedRide);\n\n      // Update in localStorage\n      const rides = JSON.parse(localStorage.getItem(\"rideHistory\") || \"[]\");\n      const updatedRides = rides.map(ride => ride._id === currentRide._id ? updatedRide : ride);\n      localStorage.setItem(\"rideHistory\", JSON.stringify(updatedRides));\n\n      // Update in sessionStorage if this is the current booking\n      const currentBooking = JSON.parse(sessionStorage.getItem(\"currentBooking\") || \"{}\");\n      if (currentBooking._id === currentRide._id) {\n        sessionStorage.setItem(\"currentBooking\", JSON.stringify(updatedRide));\n      }\n    } catch (err) {\n      console.error(\"Error starting ride:\", err);\n      setError(\"Failed to start ride\");\n    }\n  };\n  const handleCompleteRide = () => {\n    if (!currentRide) return;\n    try {\n      // Update ride status to completed\n      const updatedRide = {\n        ...currentRide,\n        status: \"completed\"\n      };\n\n      // Add to ride history and clear current ride\n      setRideHistory([updatedRide, ...rideHistory]);\n      setCurrentRide(null);\n\n      // Update in localStorage\n      const rides = JSON.parse(localStorage.getItem(\"rideHistory\") || \"[]\");\n      const updatedRides = rides.map(ride => ride._id === currentRide._id ? updatedRide : ride);\n      localStorage.setItem(\"rideHistory\", JSON.stringify(updatedRides));\n\n      // Update in sessionStorage if this is the current booking\n      const currentBooking = JSON.parse(sessionStorage.getItem(\"currentBooking\") || \"{}\");\n      if (currentBooking._id === currentRide._id) {\n        sessionStorage.setItem(\"currentBooking\", JSON.stringify(updatedRide));\n      }\n    } catch (err) {\n      console.error(\"Error completing ride:\", err);\n      setError(\"Failed to complete ride\");\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 12\n      }\n    }, \"Loading dashboard...\");\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"driver-dashboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"form-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, \"Driver Dashboard\"), error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert alert-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }, error), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"driver-status-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"driver-status-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, \"Your Status\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: `status-indicator ${isAvailable ? \"active\" : \"inactive\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, isAvailable ? \"Available\" : \"Unavailable\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"driver-info-summary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, \"Name:\"), \" \", user === null || user === void 0 ? void 0 : user.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, \"Vehicle:\"), \" \", user === null || user === void 0 ? void 0 : user.vehicleModel, \" (\", user === null || user === void 0 ? void 0 : user.vehicleNumber, \")\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, \"Rating:\"), \" \", (user === null || user === void 0 ? void 0 : user.rating) || \"5.0\", \" \\u2605\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, \"Total Rides:\"), \" \", (user === null || user === void 0 ? void 0 : user.totalRides) || rideHistory.length)), /*#__PURE__*/React.createElement(\"button\", {\n    className: `btn ${isAvailable ? \"btn-danger\" : \"btn-success\"} btn-block`,\n    onClick: handleStatusChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }, isAvailable ? \"Go Offline\" : \"Go Online\")), currentLocation && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"driver-location-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  }, \"Your Current Location\"), /*#__PURE__*/React.createElement(Map, {\n    pickup: currentLocation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  })), currentRide ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"current-ride-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 11\n    }\n  }, \"Current Ride\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ride-details-summary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ride-locations\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }\n  }, \"From:\"), \" \", currentRide.pickup.address), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }\n  }, \"To:\"), \" \", currentRide.destination.address)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ride-info-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ride-info-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"info-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }\n  }, \"Distance\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"info-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }\n  }, currentRide.distance.toFixed(2), \" km\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ride-info-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"info-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 17\n    }\n  }, \"Fare\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"info-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 17\n    }\n  }, \"\\u20B9\", currentRide.fare)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ride-info-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"info-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 17\n    }\n  }, \"Status\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"info-value status-badge\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 17\n    }\n  }, currentRide.status))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ride-actions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }\n  }, currentRide.status === \"confirmed\" && /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    onClick: handleStartRide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 17\n    }\n  }, \"Start Ride\"), currentRide.status === \"in-progress\" && /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-success\",\n    onClick: handleCompleteRide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 17\n    }\n  }, \"Complete Ride\"))), currentRide.pickup && currentRide.destination && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ride-map\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Map, {\n    pickup: currentRide.pickup.coordinates,\n    destination: currentRide.destination.coordinates,\n    driverLocation: currentLocation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 15\n    }\n  }))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"no-ride-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 11\n    }\n  }, \"No Active Ride\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 11\n    }\n  }, \"You don't have any active rides at the moment. When you're assigned a ride, it will appear here.\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ride-history-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 9\n    }\n  }, \"Recent Rides\"), rideHistory.length === 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 11\n    }\n  }, \"You haven't completed any rides yet.\") : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ride-history-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 11\n    }\n  }, rideHistory.map(ride => /*#__PURE__*/React.createElement(\"div\", {\n    key: ride._id,\n    className: \"ride-history-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ride-history-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"ride-date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 19\n    }\n  }, new Date(ride.createdAt).toLocaleDateString()), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"ride-fare\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 19\n    }\n  }, \"\\u20B9\", ride.fare)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ride-locations\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 21\n    }\n  }, \"From:\"), \" \", ride.pickup.address), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 21\n    }\n  }, \"To:\"), \" \", ride.destination.address)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ride-stats\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 19\n    }\n  }, ride.distance.toFixed(2), \" km\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 19\n    }\n  }, \"\\u2022\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 19\n    }\n  }, ride.rating ? `${ride.rating} ★` : \"Not rated\")))))));\n};\nexport default DriverDashboard;","map":{"version":3,"names":["_jsxFileName","useState","useEffect","useContext","AuthContext","Map","DriverDashboard","user","updateDriverStatus","isAvailable","setIsAvailable","currentLocation","setCurrentLocation","currentRide","setCurrentRide","rideHistory","setRideHistory","loading","setLoading","error","setError","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lng","longitude","storedRides","localStorage","getItem","rides","JSON","parse","driverRides","filter","ride","driver","name","active","find","status","err","console","handleStatusChange","newStatus","result","success","handleStartRide","updatedRide","updatedRides","map","_id","setItem","stringify","currentBooking","sessionStorage","handleCompleteRide","React","createElement","__self","__source","fileName","lineNumber","columnNumber","className","vehicleModel","vehicleNumber","rating","totalRides","length","onClick","pickup","address","destination","distance","toFixed","fare","coordinates","driverLocation","key","Date","createdAt","toLocaleDateString"],"sources":["D:/mern/cab-booking-app/client/src/pages/driver/DriverDashboard.js"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect, useContext } from \"react\"\nimport { AuthContext } from \"../../context/AuthContext\"\nimport Map from \"../../components/Map\"\n\nconst DriverDashboard = () => {\n  const { user, updateDriverStatus } = useContext(AuthContext)\n  const [isAvailable, setIsAvailable] = useState(user?.isAvailable || false)\n  const [currentLocation, setCurrentLocation] = useState(null)\n  const [currentRide, setCurrentRide] = useState(null)\n  const [rideHistory, setRideHistory] = useState([])\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState(\"\")\n\n  useEffect(() => {\n    // Get driver's current location\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          setCurrentLocation({\n            lat: position.coords.latitude,\n            lng: position.coords.longitude,\n          })\n        },\n        () => {\n          setError(\"Could not get your location. Please enable location services.\")\n        },\n      )\n    } else {\n      setError(\"Geolocation is not supported by your browser.\")\n    }\n\n    // For demo purposes, we'll use localStorage to get ride history\n    try {\n      const storedRides = localStorage.getItem(\"rideHistory\")\n      if (storedRides) {\n        const rides = JSON.parse(storedRides)\n        // Filter rides assigned to this driver (in a real app, this would come from the API)\n        const driverRides = rides.filter((ride) => ride.driver && ride.driver.name === user?.name)\n\n        // Find current ride (if any)\n        const active = driverRides.find((ride) => ride.status === \"confirmed\" || ride.status === \"in-progress\")\n\n        if (active) {\n          setCurrentRide(active)\n        }\n\n        setRideHistory(driverRides.filter((ride) => ride.status === \"completed\"))\n      }\n    } catch (err) {\n      console.error(\"Error loading ride history:\", err)\n    }\n\n    setLoading(false)\n  }, [user])\n\n  const handleStatusChange = async () => {\n    const newStatus = !isAvailable\n    const result = await updateDriverStatus(newStatus)\n\n    if (result.success) {\n      setIsAvailable(newStatus)\n    } else {\n      setError(result.error)\n    }\n  }\n\n  const handleStartRide = () => {\n    if (!currentRide) return\n\n    try {\n      // Update ride status to in-progress\n      const updatedRide = { ...currentRide, status: \"in-progress\" }\n      setCurrentRide(updatedRide)\n\n      // Update in localStorage\n      const rides = JSON.parse(localStorage.getItem(\"rideHistory\") || \"[]\")\n      const updatedRides = rides.map((ride) => (ride._id === currentRide._id ? updatedRide : ride))\n      localStorage.setItem(\"rideHistory\", JSON.stringify(updatedRides))\n\n      // Update in sessionStorage if this is the current booking\n      const currentBooking = JSON.parse(sessionStorage.getItem(\"currentBooking\") || \"{}\")\n      if (currentBooking._id === currentRide._id) {\n        sessionStorage.setItem(\"currentBooking\", JSON.stringify(updatedRide))\n      }\n    } catch (err) {\n      console.error(\"Error starting ride:\", err)\n      setError(\"Failed to start ride\")\n    }\n  }\n\n  const handleCompleteRide = () => {\n    if (!currentRide) return\n\n    try {\n      // Update ride status to completed\n      const updatedRide = { ...currentRide, status: \"completed\" }\n\n      // Add to ride history and clear current ride\n      setRideHistory([updatedRide, ...rideHistory])\n      setCurrentRide(null)\n\n      // Update in localStorage\n      const rides = JSON.parse(localStorage.getItem(\"rideHistory\") || \"[]\")\n      const updatedRides = rides.map((ride) => (ride._id === currentRide._id ? updatedRide : ride))\n      localStorage.setItem(\"rideHistory\", JSON.stringify(updatedRides))\n\n      // Update in sessionStorage if this is the current booking\n      const currentBooking = JSON.parse(sessionStorage.getItem(\"currentBooking\") || \"{}\")\n      if (currentBooking._id === currentRide._id) {\n        sessionStorage.setItem(\"currentBooking\", JSON.stringify(updatedRide))\n      }\n    } catch (err) {\n      console.error(\"Error completing ride:\", err)\n      setError(\"Failed to complete ride\")\n    }\n  }\n\n  if (loading) {\n    return <div>Loading dashboard...</div>\n  }\n\n  return (\n    <div className=\"driver-dashboard\">\n      <h2 className=\"form-title\">Driver Dashboard</h2>\n\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n\n      <div className=\"driver-status-card\">\n        <div className=\"driver-status-header\">\n          <h3>Your Status</h3>\n          <div className={`status-indicator ${isAvailable ? \"active\" : \"inactive\"}`}>\n            {isAvailable ? \"Available\" : \"Unavailable\"}\n          </div>\n        </div>\n\n        <div className=\"driver-info-summary\">\n          <p>\n            <strong>Name:</strong> {user?.name}\n          </p>\n          <p>\n            <strong>Vehicle:</strong> {user?.vehicleModel} ({user?.vehicleNumber})\n          </p>\n          <p>\n            <strong>Rating:</strong> {user?.rating || \"5.0\"} ★\n          </p>\n          <p>\n            <strong>Total Rides:</strong> {user?.totalRides || rideHistory.length}\n          </p>\n        </div>\n\n        <button className={`btn ${isAvailable ? \"btn-danger\" : \"btn-success\"} btn-block`} onClick={handleStatusChange}>\n          {isAvailable ? \"Go Offline\" : \"Go Online\"}\n        </button>\n      </div>\n\n      {currentLocation && (\n        <div className=\"driver-location-card\">\n          <h3>Your Current Location</h3>\n          <Map pickup={currentLocation} />\n        </div>\n      )}\n\n      {currentRide ? (\n        <div className=\"current-ride-card\">\n          <h3>Current Ride</h3>\n\n          <div className=\"ride-details-summary\">\n            <div className=\"ride-locations\">\n              <p>\n                <strong>From:</strong> {currentRide.pickup.address}\n              </p>\n              <p>\n                <strong>To:</strong> {currentRide.destination.address}\n              </p>\n            </div>\n\n            <div className=\"ride-info-grid\">\n              <div className=\"ride-info-item\">\n                <span className=\"info-label\">Distance</span>\n                <span className=\"info-value\">{currentRide.distance.toFixed(2)} km</span>\n              </div>\n              <div className=\"ride-info-item\">\n                <span className=\"info-label\">Fare</span>\n                <span className=\"info-value\">₹{currentRide.fare}</span>\n              </div>\n              <div className=\"ride-info-item\">\n                <span className=\"info-label\">Status</span>\n                <span className=\"info-value status-badge\">{currentRide.status}</span>\n              </div>\n            </div>\n\n            <div className=\"ride-actions\">\n              {currentRide.status === \"confirmed\" && (\n                <button className=\"btn btn-primary\" onClick={handleStartRide}>\n                  Start Ride\n                </button>\n              )}\n\n              {currentRide.status === \"in-progress\" && (\n                <button className=\"btn btn-success\" onClick={handleCompleteRide}>\n                  Complete Ride\n                </button>\n              )}\n            </div>\n          </div>\n\n          {currentRide.pickup && currentRide.destination && (\n            <div className=\"ride-map\">\n              <Map\n                pickup={currentRide.pickup.coordinates}\n                destination={currentRide.destination.coordinates}\n                driverLocation={currentLocation}\n              />\n            </div>\n          )}\n        </div>\n      ) : (\n        <div className=\"no-ride-card\">\n          <h3>No Active Ride</h3>\n          <p>You don't have any active rides at the moment. When you're assigned a ride, it will appear here.</p>\n        </div>\n      )}\n\n      <div className=\"ride-history-section\">\n        <h3>Recent Rides</h3>\n\n        {rideHistory.length === 0 ? (\n          <p>You haven't completed any rides yet.</p>\n        ) : (\n          <div className=\"ride-history-list\">\n            {rideHistory.map((ride) => (\n              <div key={ride._id} className=\"ride-history-item\">\n                <div className=\"ride-history-header\">\n                  <span className=\"ride-date\">{new Date(ride.createdAt).toLocaleDateString()}</span>\n                  <span className=\"ride-fare\">₹{ride.fare}</span>\n                </div>\n\n                <div className=\"ride-locations\">\n                  <p>\n                    <strong>From:</strong> {ride.pickup.address}\n                  </p>\n                  <p>\n                    <strong>To:</strong> {ride.destination.address}\n                  </p>\n                </div>\n\n                <div className=\"ride-stats\">\n                  <span>{ride.distance.toFixed(2)} km</span>\n                  <span>•</span>\n                  <span>{ride.rating ? `${ride.rating} ★` : \"Not rated\"}</span>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default DriverDashboard\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}