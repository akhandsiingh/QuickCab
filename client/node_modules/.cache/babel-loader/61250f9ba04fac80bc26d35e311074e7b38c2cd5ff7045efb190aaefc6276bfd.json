{"ast":null,"code":"var _jsxFileName = \"D:\\\\mern\\\\cab-booking-app\\\\client\\\\src\\\\components\\\\Map.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Map = ({\n  pickup,\n  destination,\n  onLocationSelect\n}) => {\n  _s();\n  const mapRef = useRef(null);\n  const mapInstanceRef = useRef(null);\n  const markersRef = useRef([]);\n  const leafletLoadedRef = useRef(false);\n  useEffect(() => {\n    // Initialize the map using OpenStreetMap with Leaflet\n    if (!leafletLoadedRef.current) {\n      initMap();\n    }\n    return () => {\n      // Clean up\n      if (mapInstanceRef.current && mapInstanceRef.current.remove) {\n        mapInstanceRef.current.remove();\n      }\n    };\n  }, []);\n  useEffect(() => {\n    if (mapInstanceRef.current && window.L) {\n      // Clear existing markers\n      markersRef.current.forEach(marker => {\n        if (marker && marker.remove) {\n          marker.remove();\n        }\n      });\n      markersRef.current = [];\n\n      // Add markers for pickup and destination if they exist\n      if (pickup && pickup.lat && pickup.lng) {\n        addMarker(pickup, 'Pickup Location', 'green');\n      }\n      if (destination && destination.lat && destination.lng) {\n        addMarker(destination, 'Destination', 'red');\n      }\n\n      // If both points exist, draw a route between them\n      if (pickup && pickup.lat && pickup.lng && destination && destination.lat && destination.lng) {\n        drawRoute(pickup, destination);\n      }\n    }\n  }, [pickup, destination]);\n  const initMap = () => {\n    // Check if Leaflet is already loaded\n    if (window.L) {\n      createMap();\n      return;\n    }\n    try {\n      // Load Leaflet CSS\n      const linkElement = document.createElement('link');\n      linkElement.rel = 'stylesheet';\n      linkElement.href = 'https://unpkg.com/leaflet@1.9.4/dist/leaflet.css';\n      document.head.appendChild(linkElement);\n\n      // Load Leaflet JS\n      const script = document.createElement('script');\n      script.src = 'https://unpkg.com/leaflet@1.9.4/dist/leaflet.js';\n      script.async = true;\n      script.onload = () => {\n        leafletLoadedRef.current = true;\n        createMap();\n      };\n      script.onerror = error => {\n        console.error(\"Failed to load Leaflet:\", error);\n      };\n      document.head.appendChild(script);\n    } catch (error) {\n      console.error(\"Error initializing map:\", error);\n    }\n  };\n  const createMap = () => {\n    if (!window.L || !mapRef.current) return;\n    try {\n      // Default to center of India if no location is provided\n      const defaultLocation = {\n        lat: 20.5937,\n        lng: 78.9629\n      };\n\n      // Create map\n      const map = window.L.map(mapRef.current).setView([defaultLocation.lat, defaultLocation.lng], 5);\n\n      // Add OpenStreetMap tiles\n      window.L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n      }).addTo(map);\n      mapInstanceRef.current = map;\n\n      // Try to get user's current location\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(position => {\n          const userLocation = {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude\n          };\n          map.setView([userLocation.lat, userLocation.lng], 13);\n\n          // If onLocationSelect is provided, call it with the user's location\n          if (onLocationSelect && !pickup) {\n            onLocationSelect('pickup', userLocation);\n          }\n        }, () => {\n          console.log('Error: The Geolocation service failed.');\n        });\n      }\n\n      // Add click listener to map\n      map.on('click', e => {\n        if (onLocationSelect) {\n          // Determine if we're setting pickup or destination\n          if (!pickup) {\n            onLocationSelect('pickup', {\n              lat: e.latlng.lat,\n              lng: e.latlng.lng\n            });\n          } else if (!destination) {\n            onLocationSelect('destination', {\n              lat: e.latlng.lat,\n              lng: e.latlng.lng\n            });\n          }\n        }\n      });\n    } catch (error) {\n      console.error(\"Error creating map:\", error);\n    }\n  };\n  const addMarker = (position, title, color) => {\n    if (!window.L || !mapInstanceRef.current) return;\n    try {\n      // Create a custom icon\n      const icon = window.L.divIcon({\n        className: 'custom-marker',\n        html: `<div style=\"background-color: ${color}; width: 20px; height: 20px; border-radius: 50%; border: 2px solid white;\"></div>`,\n        iconSize: [20, 20],\n        iconAnchor: [10, 10]\n      });\n\n      // Add marker\n      const marker = window.L.marker([position.lat, position.lng], {\n        icon\n      }).addTo(mapInstanceRef.current);\n      marker.bindPopup(title);\n      markersRef.current.push(marker);\n    } catch (error) {\n      console.error(\"Error adding marker:\", error);\n    }\n  };\n  const drawRoute = (origin, destination) => {\n    if (!window.L || !mapInstanceRef.current) return;\n    try {\n      // For a simple demo, we'll just draw a straight line\n      const points = [[origin.lat, origin.lng], [destination.lat, destination.lng]];\n      const line = window.L.polyline(points, {\n        color: 'blue',\n        weight: 4,\n        opacity: 0.7\n      }).addTo(mapInstanceRef.current);\n      markersRef.current.push(line);\n\n      // Fit the map to show the route\n      mapInstanceRef.current.fitBounds(line.getBounds(), {\n        padding: [50, 50]\n      });\n    } catch (error) {\n      console.error(\"Error drawing route:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mapRef,\n    className: \"map-container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 10\n  }, this);\n};\n_s(Map, \"JyjbnLKxmxmaSeGWo+RX/pt1HQE=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","Map","pickup","destination","onLocationSelect","_s","mapRef","mapInstanceRef","markersRef","leafletLoadedRef","current","initMap","remove","window","L","forEach","marker","lat","lng","addMarker","drawRoute","createMap","linkElement","document","createElement","rel","href","head","appendChild","script","src","async","onload","onerror","error","console","defaultLocation","map","setView","tileLayer","attribution","addTo","navigator","geolocation","getCurrentPosition","position","userLocation","coords","latitude","longitude","log","on","e","latlng","title","color","icon","divIcon","className","html","iconSize","iconAnchor","bindPopup","push","origin","points","line","polyline","weight","opacity","fitBounds","getBounds","padding","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/mern/cab-booking-app/client/src/components/Map.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\n\nconst Map = ({ pickup, destination, onLocationSelect }) => {\n  const mapRef = useRef(null);\n  const mapInstanceRef = useRef(null);\n  const markersRef = useRef([]);\n  const leafletLoadedRef = useRef(false);\n\n  useEffect(() => {\n    // Initialize the map using OpenStreetMap with Leaflet\n    if (!leafletLoadedRef.current) {\n      initMap();\n    }\n    \n    return () => {\n      // Clean up\n      if (mapInstanceRef.current && mapInstanceRef.current.remove) {\n        mapInstanceRef.current.remove();\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    if (mapInstanceRef.current && window.L) {\n      // Clear existing markers\n      markersRef.current.forEach(marker => {\n        if (marker && marker.remove) {\n          marker.remove();\n        }\n      });\n      markersRef.current = [];\n\n      // Add markers for pickup and destination if they exist\n      if (pickup && pickup.lat && pickup.lng) {\n        addMarker(pickup, 'Pickup Location', 'green');\n      }\n\n      if (destination && destination.lat && destination.lng) {\n        addMarker(destination, 'Destination', 'red');\n      }\n\n      // If both points exist, draw a route between them\n      if (pickup && pickup.lat && pickup.lng && destination && destination.lat && destination.lng) {\n        drawRoute(pickup, destination);\n      }\n    }\n  }, [pickup, destination]);\n\n  const initMap = () => {\n    // Check if Leaflet is already loaded\n    if (window.L) {\n      createMap();\n      return;\n    }\n\n    try {\n      // Load Leaflet CSS\n      const linkElement = document.createElement('link');\n      linkElement.rel = 'stylesheet';\n      linkElement.href = 'https://unpkg.com/leaflet@1.9.4/dist/leaflet.css';\n      document.head.appendChild(linkElement);\n      \n      // Load Leaflet JS\n      const script = document.createElement('script');\n      script.src = 'https://unpkg.com/leaflet@1.9.4/dist/leaflet.js';\n      script.async = true;\n      script.onload = () => {\n        leafletLoadedRef.current = true;\n        createMap();\n      };\n      script.onerror = (error) => {\n        console.error(\"Failed to load Leaflet:\", error);\n      };\n      document.head.appendChild(script);\n    } catch (error) {\n      console.error(\"Error initializing map:\", error);\n    }\n  };\n\n  const createMap = () => {\n    if (!window.L || !mapRef.current) return;\n    \n    try {\n      // Default to center of India if no location is provided\n      const defaultLocation = { lat: 20.5937, lng: 78.9629 };\n      \n      // Create map\n      const map = window.L.map(mapRef.current).setView([defaultLocation.lat, defaultLocation.lng], 5);\n      \n      // Add OpenStreetMap tiles\n      window.L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n      }).addTo(map);\n      \n      mapInstanceRef.current = map;\n\n      // Try to get user's current location\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(\n          (position) => {\n            const userLocation = {\n              lat: position.coords.latitude,\n              lng: position.coords.longitude\n            };\n            map.setView([userLocation.lat, userLocation.lng], 13);\n            \n            // If onLocationSelect is provided, call it with the user's location\n            if (onLocationSelect && !pickup) {\n              onLocationSelect('pickup', userLocation);\n            }\n          },\n          () => {\n            console.log('Error: The Geolocation service failed.');\n          }\n        );\n      }\n\n      // Add click listener to map\n      map.on('click', (e) => {\n        if (onLocationSelect) {\n          // Determine if we're setting pickup or destination\n          if (!pickup) {\n            onLocationSelect('pickup', { lat: e.latlng.lat, lng: e.latlng.lng });\n          } else if (!destination) {\n            onLocationSelect('destination', { lat: e.latlng.lat, lng: e.latlng.lng });\n          }\n        }\n      });\n    } catch (error) {\n      console.error(\"Error creating map:\", error);\n    }\n  };\n\n  const addMarker = (position, title, color) => {\n    if (!window.L || !mapInstanceRef.current) return;\n    \n    try {\n      // Create a custom icon\n      const icon = window.L.divIcon({\n        className: 'custom-marker',\n        html: `<div style=\"background-color: ${color}; width: 20px; height: 20px; border-radius: 50%; border: 2px solid white;\"></div>`,\n        iconSize: [20, 20],\n        iconAnchor: [10, 10]\n      });\n      \n      // Add marker\n      const marker = window.L.marker([position.lat, position.lng], { icon }).addTo(mapInstanceRef.current);\n      marker.bindPopup(title);\n      markersRef.current.push(marker);\n    } catch (error) {\n      console.error(\"Error adding marker:\", error);\n    }\n  };\n\n  const drawRoute = (origin, destination) => {\n    if (!window.L || !mapInstanceRef.current) return;\n    \n    try {\n      // For a simple demo, we'll just draw a straight line\n      const points = [\n        [origin.lat, origin.lng],\n        [destination.lat, destination.lng]\n      ];\n      \n      const line = window.L.polyline(points, {\n        color: 'blue',\n        weight: 4,\n        opacity: 0.7\n      }).addTo(mapInstanceRef.current);\n      \n      markersRef.current.push(line);\n      \n      // Fit the map to show the route\n      mapInstanceRef.current.fitBounds(line.getBounds(), {\n        padding: [50, 50]\n      });\n    } catch (error) {\n      console.error(\"Error drawing route:\", error);\n    }\n  };\n\n  return <div ref={mapRef} className=\"map-container\"></div>;\n};\n\nexport default Map;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}