{"ast":null,"code":"var _jsxFileName = \"D:\\\\mern\\\\cab-booking-app\\\\client\\\\src\\\\pages\\\\BookCab.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport Map from '../components/Map';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BookCab = () => {\n  _s();\n  const [pickup, setPickup] = useState(null);\n  const [destination, setDestination] = useState(null);\n  const [pickupAddress, setPickupAddress] = useState('');\n  const [destinationAddress, setDestinationAddress] = useState('');\n  const [cabOptions, setCabOptions] = useState([]);\n  const [selectedCab, setSelectedCab] = useState(null);\n  const [fare, setFare] = useState(null);\n  const [distance, setDistance] = useState(null);\n  const [duration, setDuration] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [showMap, setShowMap] = useState(false);\n  const [locationEntered, setLocationEntered] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Fetch cab options when component mounts\n    const fetchCabOptions = async () => {\n      try {\n        // For demo purposes, we'll create some sample cab options\n        const sampleCabs = [{\n          id: '1',\n          name: 'Economy',\n          description: 'Affordable rides for everyday use',\n          capacity: 4,\n          baseFare: 50,\n          perKmRate: 12,\n          perMinuteRate: 2,\n          image: '/placeholder.svg'\n        }, {\n          id: '2',\n          name: 'Premium',\n          description: 'Comfortable rides with extra space',\n          capacity: 4,\n          baseFare: 80,\n          perKmRate: 15,\n          perMinuteRate: 3,\n          image: '/placeholder.svg'\n        }, {\n          id: '3',\n          name: 'SUV',\n          description: 'Spacious vehicles for groups',\n          capacity: 6,\n          baseFare: 100,\n          perKmRate: 18,\n          perMinuteRate: 4,\n          image: '/placeholder.svg'\n        }];\n        setCabOptions(sampleCabs);\n      } catch (err) {\n        console.error('Error fetching cab options:', err);\n        setError('Failed to load cab options');\n      }\n    };\n    fetchCabOptions();\n  }, []);\n  const handleLocationSelect = (type, location) => {\n    if (type === 'pickup') {\n      setPickup(location);\n    } else if (type === 'destination') {\n      setDestination(location);\n    }\n  };\n\n  // Function to calculate distance between two coordinates using Haversine formula\n  const calculateHaversineDistance = (lat1, lon1, lat2, lon2) => {\n    const R = 6371; // Radius of the Earth in km\n    const dLat = (lat2 - lat1) * Math.PI / 180;\n    const dLon = (lon2 - lon1) * Math.PI / 180;\n    const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    const distance = R * c; // Distance in km\n    return distance;\n  };\n  const handleManualLocationEntry = () => {\n    // Simple validation\n    if (!pickupAddress || !destinationAddress) {\n      setError('Please enter both pickup and destination addresses');\n      return;\n    }\n\n    // For demo purposes, we'll create deterministic coordinates based on the address strings\n    // This ensures the same addresses always give the same coordinates and thus the same distance\n    const pickupHash = hashString(pickupAddress);\n    const destHash = hashString(destinationAddress);\n    const pickupCoords = {\n      lat: 28.6139 + pickupHash % 100 / 1000,\n      lng: 77.2090 + pickupHash % 50 / 1000\n    };\n    const destCoords = {\n      lat: 28.6139 + destHash % 100 / 1000,\n      lng: 77.2090 + destHash % 50 / 1000\n    };\n    setPickup(pickupCoords);\n    setDestination(destCoords);\n    setLocationEntered(true);\n\n    // Calculate fare based on these coordinates\n    calculateFareWithCoordinates(pickupCoords, destCoords);\n  };\n\n  // Simple hash function for strings\n  const hashString = str => {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n      const char = str.charCodeAt(i);\n      hash = (hash << 5) - hash + char;\n      hash = hash & hash; // Convert to 32bit integer\n    }\n    return Math.abs(hash);\n  };\n  const calculateFareWithCoordinates = (pickupCoords, destCoords) => {\n    // Calculate actual distance using Haversine formula\n    const distanceInKm = calculateHaversineDistance(pickupCoords.lat, pickupCoords.lng, destCoords.lat, destCoords.lng);\n\n    // Ensure minimum distance of 2 km for demo purposes\n    const finalDistance = Math.max(2, distanceInKm);\n\n    // Calculate duration (roughly 2 minutes per km)\n    const durationInMinutes = Math.ceil(finalDistance * 2);\n    setDistance(finalDistance);\n    setDuration(durationInMinutes);\n\n    // Calculate fare for each cab type\n    const updatedCabOptions = cabOptions.map(cab => {\n      // Base fare + per km rate + per minute rate\n      const calculatedFare = cab.baseFare + finalDistance * cab.perKmRate + durationInMinutes * cab.perMinuteRate;\n      return {\n        ...cab,\n        calculatedFare: Math.ceil(calculatedFare) // Round up to nearest rupee\n      };\n    });\n    setCabOptions(updatedCabOptions);\n\n    // If a cab is already selected, update its fare\n    if (selectedCab) {\n      const selectedCabUpdated = updatedCabOptions.find(cab => cab.id === selectedCab.id);\n      if (selectedCabUpdated) {\n        setSelectedCab(selectedCabUpdated);\n        setFare(selectedCabUpdated.calculatedFare);\n      }\n    }\n  };\n  const handleCabSelect = cab => {\n    setSelectedCab(cab);\n    setFare(cab.calculatedFare);\n  };\n  const handleBooking = async () => {\n    if (!pickup || !destination || !selectedCab) {\n      setError('Please select pickup, destination and cab type');\n      return;\n    }\n    try {\n      setLoading(true);\n\n      // In a real app, you would send this data to your API\n      const bookingData = {\n        pickup: {\n          coordinates: pickup,\n          address: pickupAddress\n        },\n        destination: {\n          coordinates: destination,\n          address: destinationAddress\n        },\n        cabType: selectedCab.id,\n        fare: fare,\n        distance: distance,\n        duration: duration\n      };\n      console.log('Booking data:', bookingData);\n\n      // Simulate API call\n      setTimeout(() => {\n        // Generate a random booking ID\n        const bookingId = Math.floor(Math.random() * 1000000);\n        navigate(`/ride/${bookingId}`);\n      }, 1500);\n    } catch (err) {\n      console.error('Error booking cab:', err);\n      setError('Failed to book cab. Please try again.');\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"book-cab-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"form-title\",\n      children: \"Book a Cab\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"location-inputs\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"pickup-input\",\n          children: \"Pickup Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"pickup-input\",\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: \"Enter pickup location\",\n          value: pickupAddress,\n          onChange: e => setPickupAddress(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"destination-input\",\n          children: \"Destination\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"destination-input\",\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: \"Enter destination\",\n          value: destinationAddress,\n          onChange: e => setDestinationAddress(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: handleManualLocationEntry,\n          disabled: !pickupAddress || !destinationAddress,\n          children: \"Find Cabs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          onClick: () => setShowMap(!showMap),\n          children: showMap ? 'Hide Map' : 'Show Map (Optional)'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), showMap && /*#__PURE__*/_jsxDEV(Map, {\n      pickup: pickup,\n      destination: destination,\n      onLocationSelect: handleLocationSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 9\n    }, this), locationEntered && distance && duration && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trip-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Distance: \", distance.toFixed(2), \" km\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Estimated Time: \", duration, \" minutes\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 9\n    }, this), locationEntered && cabOptions.length > 0 && distance && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Select Cab Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cab-options\",\n        children: cabOptions.map(cab => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `cab-option ${selectedCab && selectedCab.id === cab.id ? 'selected' : ''}`,\n          onClick: () => handleCabSelect(cab),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cab-option-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"cab-option-name\",\n              children: cab.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"cab-option-price\",\n              children: [\"\\u20B9\", cab.calculatedFare]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cab-option-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: cab.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Capacity: \", cab.capacity, \" persons\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 17\n          }, this)]\n        }, cab.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), selectedCab && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"booking-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Booking Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Cab Type: \", selectedCab.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Pickup: \", pickupAddress]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Destination: \", destinationAddress]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Distance: \", distance.toFixed(2), \" km\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Estimated Time: \", duration, \" minutes\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Fare: \\u20B9\", fare]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary btn-block\",\n        onClick: handleBooking,\n        disabled: loading,\n        children: loading ? 'Processing...' : 'Book Now'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 5\n  }, this);\n};\n_s(BookCab, \"5/X0rIpQzQzMD8EDv94qXk2IJLk=\", false, function () {\n  return [useNavigate];\n});\n_c = BookCab;\nexport default BookCab;\nvar _c;\n$RefreshReg$(_c, \"BookCab\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","Map","jsxDEV","_jsxDEV","Fragment","_Fragment","BookCab","_s","pickup","setPickup","destination","setDestination","pickupAddress","setPickupAddress","destinationAddress","setDestinationAddress","cabOptions","setCabOptions","selectedCab","setSelectedCab","fare","setFare","distance","setDistance","duration","setDuration","loading","setLoading","error","setError","showMap","setShowMap","locationEntered","setLocationEntered","navigate","fetchCabOptions","sampleCabs","id","name","description","capacity","baseFare","perKmRate","perMinuteRate","image","err","console","handleLocationSelect","type","location","calculateHaversineDistance","lat1","lon1","lat2","lon2","R","dLat","Math","PI","dLon","a","sin","cos","c","atan2","sqrt","handleManualLocationEntry","pickupHash","hashString","destHash","pickupCoords","lat","lng","destCoords","calculateFareWithCoordinates","str","hash","i","length","char","charCodeAt","abs","distanceInKm","finalDistance","max","durationInMinutes","ceil","updatedCabOptions","map","cab","calculatedFare","selectedCabUpdated","find","handleCabSelect","handleBooking","bookingData","coordinates","address","cabType","log","setTimeout","bookingId","floor","random","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","placeholder","value","onChange","e","target","onClick","disabled","onLocationSelect","toFixed","_c","$RefreshReg$"],"sources":["D:/mern/cab-booking-app/client/src/pages/BookCab.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport Map from '../components/Map';\n\nconst BookCab = () => {\n  const [pickup, setPickup] = useState(null);\n  const [destination, setDestination] = useState(null);\n  const [pickupAddress, setPickupAddress] = useState('');\n  const [destinationAddress, setDestinationAddress] = useState('');\n  const [cabOptions, setCabOptions] = useState([]);\n  const [selectedCab, setSelectedCab] = useState(null);\n  const [fare, setFare] = useState(null);\n  const [distance, setDistance] = useState(null);\n  const [duration, setDuration] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [showMap, setShowMap] = useState(false);\n  const [locationEntered, setLocationEntered] = useState(false);\n  \n  const navigate = useNavigate();\n\n  useEffect(() => {\n    // Fetch cab options when component mounts\n    const fetchCabOptions = async () => {\n      try {\n        // For demo purposes, we'll create some sample cab options\n        const sampleCabs = [\n          {\n            id: '1',\n            name: 'Economy',\n            description: 'Affordable rides for everyday use',\n            capacity: 4,\n            baseFare: 50,\n            perKmRate: 12,\n            perMinuteRate: 2,\n            image: '/placeholder.svg'\n          },\n          {\n            id: '2',\n            name: 'Premium',\n            description: 'Comfortable rides with extra space',\n            capacity: 4,\n            baseFare: 80,\n            perKmRate: 15,\n            perMinuteRate: 3,\n            image: '/placeholder.svg'\n          },\n          {\n            id: '3',\n            name: 'SUV',\n            description: 'Spacious vehicles for groups',\n            capacity: 6,\n            baseFare: 100,\n            perKmRate: 18,\n            perMinuteRate: 4,\n            image: '/placeholder.svg'\n          }\n        ];\n        setCabOptions(sampleCabs);\n      } catch (err) {\n        console.error('Error fetching cab options:', err);\n        setError('Failed to load cab options');\n      }\n    };\n\n    fetchCabOptions();\n  }, []);\n\n  const handleLocationSelect = (type, location) => {\n    if (type === 'pickup') {\n      setPickup(location);\n    } else if (type === 'destination') {\n      setDestination(location);\n    }\n  };\n\n  // Function to calculate distance between two coordinates using Haversine formula\n  const calculateHaversineDistance = (lat1, lon1, lat2, lon2) => {\n    const R = 6371; // Radius of the Earth in km\n    const dLat = (lat2 - lat1) * Math.PI / 180;\n    const dLon = (lon2 - lon1) * Math.PI / 180;\n    const a = \n      Math.sin(dLat/2) * Math.sin(dLat/2) +\n      Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) * \n      Math.sin(dLon/2) * Math.sin(dLon/2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n    const distance = R * c; // Distance in km\n    return distance;\n  };\n\n  const handleManualLocationEntry = () => {\n    // Simple validation\n    if (!pickupAddress || !destinationAddress) {\n      setError('Please enter both pickup and destination addresses');\n      return;\n    }\n\n    // For demo purposes, we'll create deterministic coordinates based on the address strings\n    // This ensures the same addresses always give the same coordinates and thus the same distance\n    const pickupHash = hashString(pickupAddress);\n    const destHash = hashString(destinationAddress);\n    \n    const pickupCoords = {\n      lat: 28.6139 + (pickupHash % 100) / 1000,\n      lng: 77.2090 + (pickupHash % 50) / 1000\n    };\n    \n    const destCoords = {\n      lat: 28.6139 + (destHash % 100) / 1000,\n      lng: 77.2090 + (destHash % 50) / 1000\n    };\n    \n    setPickup(pickupCoords);\n    setDestination(destCoords);\n    setLocationEntered(true);\n    \n    // Calculate fare based on these coordinates\n    calculateFareWithCoordinates(pickupCoords, destCoords);\n  };\n\n  // Simple hash function for strings\n  const hashString = (str) => {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n      const char = str.charCodeAt(i);\n      hash = ((hash << 5) - hash) + char;\n      hash = hash & hash; // Convert to 32bit integer\n    }\n    return Math.abs(hash);\n  };\n\n  const calculateFareWithCoordinates = (pickupCoords, destCoords) => {\n    // Calculate actual distance using Haversine formula\n    const distanceInKm = calculateHaversineDistance(\n      pickupCoords.lat, \n      pickupCoords.lng, \n      destCoords.lat, \n      destCoords.lng\n    );\n    \n    // Ensure minimum distance of 2 km for demo purposes\n    const finalDistance = Math.max(2, distanceInKm);\n    \n    // Calculate duration (roughly 2 minutes per km)\n    const durationInMinutes = Math.ceil(finalDistance * 2);\n    \n    setDistance(finalDistance);\n    setDuration(durationInMinutes);\n    \n    // Calculate fare for each cab type\n    const updatedCabOptions = cabOptions.map(cab => {\n      // Base fare + per km rate + per minute rate\n      const calculatedFare = cab.baseFare + (finalDistance * cab.perKmRate) + (durationInMinutes * cab.perMinuteRate);\n      return {\n        ...cab,\n        calculatedFare: Math.ceil(calculatedFare) // Round up to nearest rupee\n      };\n    });\n    \n    setCabOptions(updatedCabOptions);\n    \n    // If a cab is already selected, update its fare\n    if (selectedCab) {\n      const selectedCabUpdated = updatedCabOptions.find(cab => cab.id === selectedCab.id);\n      if (selectedCabUpdated) {\n        setSelectedCab(selectedCabUpdated);\n        setFare(selectedCabUpdated.calculatedFare);\n      }\n    }\n  };\n\n  const handleCabSelect = (cab) => {\n    setSelectedCab(cab);\n    setFare(cab.calculatedFare);\n  };\n\n  const handleBooking = async () => {\n    if (!pickup || !destination || !selectedCab) {\n      setError('Please select pickup, destination and cab type');\n      return;\n    }\n\n    try {\n      setLoading(true);\n      \n      // In a real app, you would send this data to your API\n      const bookingData = {\n        pickup: {\n          coordinates: pickup,\n          address: pickupAddress\n        },\n        destination: {\n          coordinates: destination,\n          address: destinationAddress\n        },\n        cabType: selectedCab.id,\n        fare: fare,\n        distance: distance,\n        duration: duration\n      };\n      \n      console.log('Booking data:', bookingData);\n      \n      // Simulate API call\n      setTimeout(() => {\n        // Generate a random booking ID\n        const bookingId = Math.floor(Math.random() * 1000000);\n        navigate(`/ride/${bookingId}`);\n      }, 1500);\n      \n    } catch (err) {\n      console.error('Error booking cab:', err);\n      setError('Failed to book cab. Please try again.');\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"book-cab-container\">\n      <h2 className=\"form-title\">Book a Cab</h2>\n      \n      {error && <div className=\"alert alert-danger\">{error}</div>}\n      \n      <div className=\"location-inputs\">\n        <div className=\"form-group\">\n          <label htmlFor=\"pickup-input\">Pickup Location</label>\n          <input\n            id=\"pickup-input\"\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Enter pickup location\"\n            value={pickupAddress}\n            onChange={(e) => setPickupAddress(e.target.value)}\n          />\n        </div>\n        \n        <div className=\"form-group\">\n          <label htmlFor=\"destination-input\">Destination</label>\n          <input\n            id=\"destination-input\"\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Enter destination\"\n            value={destinationAddress}\n            onChange={(e) => setDestinationAddress(e.target.value)}\n          />\n        </div>\n\n        <div className=\"form-actions\">\n          <button \n            className=\"btn btn-primary\"\n            onClick={handleManualLocationEntry}\n            disabled={!pickupAddress || !destinationAddress}\n          >\n            Find Cabs\n          </button>\n          \n          <button \n            className=\"btn btn-secondary\"\n            onClick={() => setShowMap(!showMap)}\n          >\n            {showMap ? 'Hide Map' : 'Show Map (Optional)'}\n          </button>\n        </div>\n      </div>\n      \n      {showMap && (\n        <Map\n          pickup={pickup}\n          destination={destination}\n          onLocationSelect={handleLocationSelect}\n        />\n      )}\n      \n      {locationEntered && distance && duration && (\n        <div className=\"trip-info\">\n          <p>Distance: {distance.toFixed(2)} km</p>\n          <p>Estimated Time: {duration} minutes</p>\n        </div>\n      )}\n      \n      {locationEntered && cabOptions.length > 0 && distance && (\n        <>\n          <h3>Select Cab Type</h3>\n          <div className=\"cab-options\">\n            {cabOptions.map(cab => (\n              <div\n                key={cab.id}\n                className={`cab-option ${selectedCab && selectedCab.id === cab.id ? 'selected' : ''}`}\n                onClick={() => handleCabSelect(cab)}\n              >\n                <div className=\"cab-option-header\">\n                  <span className=\"cab-option-name\">{cab.name}</span>\n                  <span className=\"cab-option-price\">₹{cab.calculatedFare}</span>\n                </div>\n                <div className=\"cab-option-details\">\n                  <p>{cab.description}</p>\n                  <p>Capacity: {cab.capacity} persons</p>\n                </div>\n              </div>\n            ))}\n          </div>\n        </>\n      )}\n      \n      {selectedCab && (\n        <div className=\"booking-summary\">\n          <h3>Booking Summary</h3>\n          <p>Cab Type: {selectedCab.name}</p>\n          <p>Pickup: {pickupAddress}</p>\n          <p>Destination: {destinationAddress}</p>\n          <p>Distance: {distance.toFixed(2)} km</p>\n          <p>Estimated Time: {duration} minutes</p>\n          <p>Fare: ₹{fare}</p>\n          \n          <button\n            className=\"btn btn-primary btn-block\"\n            onClick={handleBooking}\n            disabled={loading}\n          >\n            {loading ? 'Processing...' : 'Book Now'}\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default BookCab;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}