{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"D:\\\\mern\\\\cab-booking-app\\\\client\\\\src\\\\pages\\\\admin\\\\AdminLogin.js\",\n  _s = $RefreshSig$();\nimport { useState, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminLogin = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [error, setError] = useState(\"\");\n  const {\n    login\n  } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const {\n    email,\n    password\n  } = formData;\n  const onChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const onSubmit = async e => {\n    e.preventDefault();\n    if (!email || !password) {\n      setError(\"Please enter all fields\");\n      return;\n    }\n    const result = await login(email, password, \"admin\");\n    if (result.success) {\n      navigate(\"/admin\");\n    } else {\n      setError(result.error);\n    }\n  };\n\n  // For demo purposes - create a demo admin account\n  const createDemoAdmin = () => {\n    // In a real app, this would be done through a secure admin creation process\n    // This is just for demonstration\n\n    // Create a demo admin in localStorage\n    const demoAdmin = {\n      id: \"admin-1\",\n      name: \"Admin User\",\n      email: \"admin@example.com\",\n      password: \"admin123\",\n      // In a real app, this would be hashed\n      role: \"admin\"\n    };\n\n    // Store in localStorage for demo purposes\n    try {\n      const users = JSON.parse(localStorage.getItem(\"users\") || \"[]\");\n\n      // Check if admin already exists\n      const adminExists = users.some(user => user.email === demoAdmin.email);\n      if (!adminExists) {\n        users.push(demoAdmin);\n        localStorage.setItem(\"users\", JSON.stringify(users));\n\n        // Set the demo credentials in the form\n        setFormData({\n          email: demoAdmin.email,\n          password: demoAdmin.password\n        });\n        setError(\"Demo admin created! You can now login with the credentials.\");\n      } else {\n        setFormData({\n          email: demoAdmin.email,\n          password: demoAdmin.password\n        });\n        setError(\"Demo admin already exists. Login credentials are filled.\");\n      }\n    } catch (err) {\n      console.error(\"Error creating demo admin:\", err);\n      setError(\"Failed to create demo admin\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"form-title\",\n      children: \"Admin Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          value: email,\n          onChange: onChange,\n          className: \"form-control\",\n          placeholder: \"Enter your email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          value: password,\n          onChange: onChange,\n          className: \"form-control\",\n          placeholder: \"Enter your password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary btn-block\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"demo-admin-section\",\n      style: {\n        marginTop: \"2rem\",\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Need a demo admin account?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createDemoAdmin,\n        className: \"btn btn-secondary\",\n        children: \"Create Demo Admin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminLogin, \"eaqfHtaqxVRuUgTjGpzj5k61EQ8=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminLogin;\nexport default AdminLogin;\nvar _c;\n$RefreshReg$(_c, \"AdminLogin\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","useContext","useNavigate","AuthContext","jsxDEV","_jsxDEV","AdminLogin","formData","setFormData","email","password","error","setError","login","navigate","onChange","e","target","name","value","onSubmit","preventDefault","result","success","createDemoAdmin","demoAdmin","id","role","users","JSON","parse","localStorage","getItem","adminExists","some","user","push","setItem","stringify","err","console","className","children","fileName","lineNumber","columnNumber","htmlFor","type","placeholder","required","style","marginTop","textAlign","onClick","_c","$RefreshReg$"],"sources":["D:/mern/cab-booking-app/client/src/pages/admin/AdminLogin.js"],"sourcesContent":["\"use client\"\n\nimport { useState, useContext } from \"react\"\nimport { useNavigate } from \"react-router-dom\"\nimport { AuthContext } from \"../../context/AuthContext\"\n\nconst AdminLogin = () => {\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n  })\n  const [error, setError] = useState(\"\")\n  const { login } = useContext(AuthContext)\n  const navigate = useNavigate()\n\n  const { email, password } = formData\n\n  const onChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value })\n  }\n\n  const onSubmit = async (e) => {\n    e.preventDefault()\n\n    if (!email || !password) {\n      setError(\"Please enter all fields\")\n      return\n    }\n\n    const result = await login(email, password, \"admin\")\n\n    if (result.success) {\n      navigate(\"/admin\")\n    } else {\n      setError(result.error)\n    }\n  }\n\n  // For demo purposes - create a demo admin account\n  const createDemoAdmin = () => {\n    // In a real app, this would be done through a secure admin creation process\n    // This is just for demonstration\n\n    // Create a demo admin in localStorage\n    const demoAdmin = {\n      id: \"admin-1\",\n      name: \"Admin User\",\n      email: \"admin@example.com\",\n      password: \"admin123\", // In a real app, this would be hashed\n      role: \"admin\",\n    }\n\n    // Store in localStorage for demo purposes\n    try {\n      const users = JSON.parse(localStorage.getItem(\"users\") || \"[]\")\n\n      // Check if admin already exists\n      const adminExists = users.some((user) => user.email === demoAdmin.email)\n\n      if (!adminExists) {\n        users.push(demoAdmin)\n        localStorage.setItem(\"users\", JSON.stringify(users))\n\n        // Set the demo credentials in the form\n        setFormData({\n          email: demoAdmin.email,\n          password: demoAdmin.password,\n        })\n\n        setError(\"Demo admin created! You can now login with the credentials.\")\n      } else {\n        setFormData({\n          email: demoAdmin.email,\n          password: demoAdmin.password,\n        })\n        setError(\"Demo admin already exists. Login credentials are filled.\")\n      }\n    } catch (err) {\n      console.error(\"Error creating demo admin:\", err)\n      setError(\"Failed to create demo admin\")\n    }\n  }\n\n  return (\n    <div className=\"form-container\">\n      <h2 className=\"form-title\">Admin Login</h2>\n\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n\n      <form onSubmit={onSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"email\">Email</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={onChange}\n            className=\"form-control\"\n            placeholder=\"Enter your email\"\n            required\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={onChange}\n            className=\"form-control\"\n            placeholder=\"Enter your password\"\n            required\n          />\n        </div>\n\n        <button type=\"submit\" className=\"btn btn-primary btn-block\">\n          Login\n        </button>\n      </form>\n\n      <div className=\"demo-admin-section\" style={{ marginTop: \"2rem\", textAlign: \"center\" }}>\n        <p>Need a demo admin account?</p>\n        <button onClick={createDemoAdmin} className=\"btn btn-secondary\">\n          Create Demo Admin\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default AdminLogin\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}