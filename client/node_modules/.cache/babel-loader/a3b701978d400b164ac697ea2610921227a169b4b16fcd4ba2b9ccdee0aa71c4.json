{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"D:\\\\mern\\\\cab-booking-app\\\\client\\\\src\\\\components\\\\Map.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Map = ({\n  pickup,\n  destination,\n  onLocationSelect,\n  driverLocation\n}) => {\n  _s();\n  const mapRef = useRef(null);\n  const mapInstanceRef = useRef(null);\n  const markersRef = useRef([]);\n  const routeRef = useRef(null);\n  const [mapLoaded, setMapLoaded] = useState(false);\n  const [pickupSelected, setPickupSelected] = useState(!!pickup);\n  const [leafletLoaded, setLeafletLoaded] = useState(false);\n  useEffect(() => {\n    // Initialize the map using OpenStreetMap with Leaflet\n    initMap();\n    return () => {\n      // Clean up\n      if (mapInstanceRef.current) {\n        try {\n          mapInstanceRef.current.remove();\n        } catch (error) {\n          console.error(\"Error removing map:\", error);\n        }\n      }\n    };\n  }, []);\n  useEffect(() => {\n    if (mapInstanceRef.current && mapLoaded && leafletLoaded) {\n      try {\n        // Clear existing markers\n        markersRef.current.forEach(marker => {\n          if (marker && typeof marker.remove === \"function\") {\n            marker.remove();\n          }\n        });\n        markersRef.current = [];\n\n        // Clear existing route\n        if (routeRef.current && typeof routeRef.current.remove === \"function\") {\n          routeRef.current.remove();\n          routeRef.current = null;\n        }\n\n        // Add markers for pickup and destination if they exist\n        if (pickup && pickup.lat && pickup.lng) {\n          addMarker(pickup, \"Pickup Location\", \"green\");\n          setPickupSelected(true);\n        }\n        if (destination && destination.lat && destination.lng) {\n          addMarker(destination, \"Destination\", \"red\");\n        }\n\n        // Add driver location marker if available\n        if (driverLocation && driverLocation.lat && driverLocation.lng) {\n          addDriverMarker(driverLocation);\n        }\n\n        // If both points exist, draw a route between them\n        if (pickup && pickup.lat && pickup.lng && destination && destination.lat && destination.lng) {\n          drawRoute(pickup, destination);\n        }\n      } catch (error) {\n        console.error(\"Error updating map:\", error);\n      }\n    }\n  }, [pickup, destination, driverLocation, mapLoaded, leafletLoaded]);\n  const initMap = () => {\n    // Check if Leaflet is available\n    if (typeof window !== \"undefined\" && !window.L) {\n      try {\n        // Load Leaflet CSS\n        const linkElement = document.createElement(\"link\");\n        linkElement.rel = \"stylesheet\";\n        linkElement.href = \"https://unpkg.com/leaflet@1.9.4/dist/leaflet.css\";\n        document.head.appendChild(linkElement);\n\n        // Load Leaflet JS\n        const script = document.createElement(\"script\");\n        script.src = \"https://unpkg.com/leaflet@1.9.4/dist/leaflet.js\";\n        script.async = true;\n        script.onload = () => {\n          setLeafletLoaded(true);\n          createMap();\n        };\n        document.head.appendChild(script);\n      } catch (error) {\n        console.error(\"Error loading Leaflet:\", error);\n      }\n    } else if (typeof window !== \"undefined\" && window.L) {\n      setLeafletLoaded(true);\n      createMap();\n    }\n  };\n  const createMap = () => {\n    if (typeof window === \"undefined\" || !window.L || !mapRef.current) return;\n    try {\n      // Default to center of India if no location is provided\n      const defaultLocation = {\n        lat: 20.5937,\n        lng: 78.9629\n      };\n\n      // Create map\n      const map = window.L.map(mapRef.current).setView([defaultLocation.lat, defaultLocation.lng], 5);\n\n      // Add OpenStreetMap tiles\n      window.L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n        attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n      }).addTo(map);\n      mapInstanceRef.current = map;\n      setMapLoaded(true);\n\n      // Try to get user's current location\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(position => {\n          const userLocation = {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude\n          };\n          map.setView([userLocation.lat, userLocation.lng], 12);\n\n          // If onLocationSelect is provided, call it with the user's location\n          if (onLocationSelect && !pickup) {\n            onLocationSelect(\"pickup\", userLocation);\n          }\n        }, () => {\n          console.log(\"Error: The Geolocation service failed.\");\n        });\n      }\n\n      // Add click listener to map\n      map.on(\"click\", e => {\n        if (onLocationSelect) {\n          // Determine if we're setting pickup or destination based on what's already selected\n          if (!pickupSelected) {\n            onLocationSelect(\"pickup\", {\n              lat: e.latlng.lat,\n              lng: e.latlng.lng\n            });\n            setPickupSelected(true);\n          } else {\n            onLocationSelect(\"destination\", {\n              lat: e.latlng.lat,\n              lng: e.latlng.lng\n            });\n          }\n        }\n      });\n    } catch (error) {\n      console.error(\"Error creating map:\", error);\n    }\n  };\n  const addMarker = (position, title, color) => {\n    if (typeof window === \"undefined\" || !window.L || !mapInstanceRef.current) return;\n    try {\n      // Create a custom icon\n      const icon = window.L.divIcon({\n        className: \"custom-marker\",\n        html: `<div style=\"background-color: ${color}; width: 20px; height: 20px; border-radius: 50%; border: 2px solid white; box-shadow: 0 2px 5px rgba(0,0,0,0.2);\"></div>`,\n        iconSize: [20, 20],\n        iconAnchor: [10, 10]\n      });\n\n      // Add marker\n      const marker = window.L.marker([position.lat, position.lng], {\n        icon\n      }).addTo(mapInstanceRef.current);\n      marker.bindPopup(title);\n      markersRef.current.push(marker);\n\n      // Center map on the marker\n      mapInstanceRef.current.setView([position.lat, position.lng], 12);\n    } catch (error) {\n      console.error(\"Error adding marker:\", error);\n    }\n  };\n  const addDriverMarker = position => {\n    if (typeof window === \"undefined\" || !window.L || !mapInstanceRef.current) return;\n    try {\n      // Create a car icon\n      const icon = window.L.divIcon({\n        className: \"driver-marker\",\n        html: `<div style=\"background-color: #4a6cf7; color: white; width: 30px; height: 30px; border-radius: 50%; display: flex; align-items: center; justify-content: center; border: 2px solid white; box-shadow: 0 2px 5px rgba(0,0,0,0.2);\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                  <path d=\"M19 17h2c.6 0 1-.4 1-1v-3c0-.9-.7-1.7-1.5-1.9C18.7 10.6 16 10 16 10s-1.3-1.4-2.2-2.3c-.5-.4-1.1-.7-1.8-.7H5c-.6 0-1.1.4-1.4.9l-1.5 2.8C1.4 11.3 1 12.1 1 13v3c0 .6.4 1 1 1h2\"></path>\n                  <circle cx=\"7\" cy=\"17\" r=\"2\"></circle>\n                  <path d=\"M9 17h6\"></path>\n                  <circle cx=\"17\" cy=\"17\" r=\"2\"></circle>\n                </svg>\n              </div>`,\n        iconSize: [30, 30],\n        iconAnchor: [15, 15]\n      });\n\n      // Add marker\n      const marker = window.L.marker([position.lat, position.lng], {\n        icon\n      }).addTo(mapInstanceRef.current);\n      marker.bindPopup(\"Driver Location\");\n      markersRef.current.push(marker);\n    } catch (error) {\n      console.error(\"Error adding driver marker:\", error);\n    }\n  };\n  const drawRoute = (origin, destination) => {\n    if (typeof window === \"undefined\" || !window.L || !mapInstanceRef.current) return;\n    try {\n      // For a simple demo, we'll just draw a straight line\n      // In a real app, you would use a routing service like OSRM or GraphHopper\n      const points = [[origin.lat, origin.lng], [destination.lat, destination.lng]];\n      const line = window.L.polyline(points, {\n        color: \"#4a6cf7\",\n        weight: 4,\n        opacity: 0.7,\n        dashArray: \"10, 10\"\n      }).addTo(mapInstanceRef.current);\n      routeRef.current = line;\n\n      // Fit the map to show the route\n      mapInstanceRef.current.fitBounds(line.getBounds(), {\n        padding: [50, 50]\n      });\n    } catch (error) {\n      console.error(\"Error drawing route:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mapRef,\n    className: \"map-container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 237,\n    columnNumber: 10\n  }, this);\n};\n_s(Map, \"Dg/S4wmysWpkNCqGHQ1mOaw9Sow=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useEffect","useRef","useState","jsxDEV","_jsxDEV","Map","pickup","destination","onLocationSelect","driverLocation","mapRef","mapInstanceRef","markersRef","routeRef","mapLoaded","setMapLoaded","pickupSelected","setPickupSelected","leafletLoaded","setLeafletLoaded","initMap","current","remove","error","console","forEach","marker","lat","lng","addMarker","addDriverMarker","drawRoute","window","L","linkElement","document","createElement","rel","href","head","appendChild","script","src","async","onload","createMap","defaultLocation","map","setView","tileLayer","attribution","addTo","navigator","geolocation","getCurrentPosition","position","userLocation","coords","latitude","longitude","log","on","e","latlng","title","color","icon","divIcon","className","html","iconSize","iconAnchor","bindPopup","push","origin","points","line","polyline","weight","opacity","dashArray","fitBounds","getBounds","padding","ref","fileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/mern/cab-booking-app/client/src/components/Map.js"],"sourcesContent":["\"use client\"\n\nimport { useEffect, useRef, useState } from \"react\"\n\nconst Map = ({ pickup, destination, onLocationSelect, driverLocation }) => {\n  const mapRef = useRef(null)\n  const mapInstanceRef = useRef(null)\n  const markersRef = useRef([])\n  const routeRef = useRef(null)\n  const [mapLoaded, setMapLoaded] = useState(false)\n  const [pickupSelected, setPickupSelected] = useState(!!pickup)\n  const [leafletLoaded, setLeafletLoaded] = useState(false)\n\n  useEffect(() => {\n    // Initialize the map using OpenStreetMap with Leaflet\n    initMap()\n\n    return () => {\n      // Clean up\n      if (mapInstanceRef.current) {\n        try {\n          mapInstanceRef.current.remove()\n        } catch (error) {\n          console.error(\"Error removing map:\", error)\n        }\n      }\n    }\n  }, [])\n\n  useEffect(() => {\n    if (mapInstanceRef.current && mapLoaded && leafletLoaded) {\n      try {\n        // Clear existing markers\n        markersRef.current.forEach((marker) => {\n          if (marker && typeof marker.remove === \"function\") {\n            marker.remove()\n          }\n        })\n        markersRef.current = []\n\n        // Clear existing route\n        if (routeRef.current && typeof routeRef.current.remove === \"function\") {\n          routeRef.current.remove()\n          routeRef.current = null\n        }\n\n        // Add markers for pickup and destination if they exist\n        if (pickup && pickup.lat && pickup.lng) {\n          addMarker(pickup, \"Pickup Location\", \"green\")\n          setPickupSelected(true)\n        }\n\n        if (destination && destination.lat && destination.lng) {\n          addMarker(destination, \"Destination\", \"red\")\n        }\n\n        // Add driver location marker if available\n        if (driverLocation && driverLocation.lat && driverLocation.lng) {\n          addDriverMarker(driverLocation)\n        }\n\n        // If both points exist, draw a route between them\n        if (pickup && pickup.lat && pickup.lng && destination && destination.lat && destination.lng) {\n          drawRoute(pickup, destination)\n        }\n      } catch (error) {\n        console.error(\"Error updating map:\", error)\n      }\n    }\n  }, [pickup, destination, driverLocation, mapLoaded, leafletLoaded])\n\n  const initMap = () => {\n    // Check if Leaflet is available\n    if (typeof window !== \"undefined\" && !window.L) {\n      try {\n        // Load Leaflet CSS\n        const linkElement = document.createElement(\"link\")\n        linkElement.rel = \"stylesheet\"\n        linkElement.href = \"https://unpkg.com/leaflet@1.9.4/dist/leaflet.css\"\n        document.head.appendChild(linkElement)\n\n        // Load Leaflet JS\n        const script = document.createElement(\"script\")\n        script.src = \"https://unpkg.com/leaflet@1.9.4/dist/leaflet.js\"\n        script.async = true\n        script.onload = () => {\n          setLeafletLoaded(true)\n          createMap()\n        }\n        document.head.appendChild(script)\n      } catch (error) {\n        console.error(\"Error loading Leaflet:\", error)\n      }\n    } else if (typeof window !== \"undefined\" && window.L) {\n      setLeafletLoaded(true)\n      createMap()\n    }\n  }\n\n  const createMap = () => {\n    if (typeof window === \"undefined\" || !window.L || !mapRef.current) return\n\n    try {\n      // Default to center of India if no location is provided\n      const defaultLocation = { lat: 20.5937, lng: 78.9629 }\n\n      // Create map\n      const map = window.L.map(mapRef.current).setView([defaultLocation.lat, defaultLocation.lng], 5)\n\n      // Add OpenStreetMap tiles\n      window.L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n        attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n      }).addTo(map)\n\n      mapInstanceRef.current = map\n      setMapLoaded(true)\n\n      // Try to get user's current location\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(\n          (position) => {\n            const userLocation = {\n              lat: position.coords.latitude,\n              lng: position.coords.longitude,\n            }\n            map.setView([userLocation.lat, userLocation.lng], 12)\n\n            // If onLocationSelect is provided, call it with the user's location\n            if (onLocationSelect && !pickup) {\n              onLocationSelect(\"pickup\", userLocation)\n            }\n          },\n          () => {\n            console.log(\"Error: The Geolocation service failed.\")\n          },\n        )\n      }\n\n      // Add click listener to map\n      map.on(\"click\", (e) => {\n        if (onLocationSelect) {\n          // Determine if we're setting pickup or destination based on what's already selected\n          if (!pickupSelected) {\n            onLocationSelect(\"pickup\", { lat: e.latlng.lat, lng: e.latlng.lng })\n            setPickupSelected(true)\n          } else {\n            onLocationSelect(\"destination\", { lat: e.latlng.lat, lng: e.latlng.lng })\n          }\n        }\n      })\n    } catch (error) {\n      console.error(\"Error creating map:\", error)\n    }\n  }\n\n  const addMarker = (position, title, color) => {\n    if (typeof window === \"undefined\" || !window.L || !mapInstanceRef.current) return\n\n    try {\n      // Create a custom icon\n      const icon = window.L.divIcon({\n        className: \"custom-marker\",\n        html: `<div style=\"background-color: ${color}; width: 20px; height: 20px; border-radius: 50%; border: 2px solid white; box-shadow: 0 2px 5px rgba(0,0,0,0.2);\"></div>`,\n        iconSize: [20, 20],\n        iconAnchor: [10, 10],\n      })\n\n      // Add marker\n      const marker = window.L.marker([position.lat, position.lng], { icon }).addTo(mapInstanceRef.current)\n      marker.bindPopup(title)\n      markersRef.current.push(marker)\n\n      // Center map on the marker\n      mapInstanceRef.current.setView([position.lat, position.lng], 12)\n    } catch (error) {\n      console.error(\"Error adding marker:\", error)\n    }\n  }\n\n  const addDriverMarker = (position) => {\n    if (typeof window === \"undefined\" || !window.L || !mapInstanceRef.current) return\n\n    try {\n      // Create a car icon\n      const icon = window.L.divIcon({\n        className: \"driver-marker\",\n        html: `<div style=\"background-color: #4a6cf7; color: white; width: 30px; height: 30px; border-radius: 50%; display: flex; align-items: center; justify-content: center; border: 2px solid white; box-shadow: 0 2px 5px rgba(0,0,0,0.2);\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                  <path d=\"M19 17h2c.6 0 1-.4 1-1v-3c0-.9-.7-1.7-1.5-1.9C18.7 10.6 16 10 16 10s-1.3-1.4-2.2-2.3c-.5-.4-1.1-.7-1.8-.7H5c-.6 0-1.1.4-1.4.9l-1.5 2.8C1.4 11.3 1 12.1 1 13v3c0 .6.4 1 1 1h2\"></path>\n                  <circle cx=\"7\" cy=\"17\" r=\"2\"></circle>\n                  <path d=\"M9 17h6\"></path>\n                  <circle cx=\"17\" cy=\"17\" r=\"2\"></circle>\n                </svg>\n              </div>`,\n        iconSize: [30, 30],\n        iconAnchor: [15, 15],\n      })\n\n      // Add marker\n      const marker = window.L.marker([position.lat, position.lng], { icon }).addTo(mapInstanceRef.current)\n      marker.bindPopup(\"Driver Location\")\n      markersRef.current.push(marker)\n    } catch (error) {\n      console.error(\"Error adding driver marker:\", error)\n    }\n  }\n\n  const drawRoute = (origin, destination) => {\n    if (typeof window === \"undefined\" || !window.L || !mapInstanceRef.current) return\n\n    try {\n      // For a simple demo, we'll just draw a straight line\n      // In a real app, you would use a routing service like OSRM or GraphHopper\n      const points = [\n        [origin.lat, origin.lng],\n        [destination.lat, destination.lng],\n      ]\n\n      const line = window.L.polyline(points, {\n        color: \"#4a6cf7\",\n        weight: 4,\n        opacity: 0.7,\n        dashArray: \"10, 10\",\n      }).addTo(mapInstanceRef.current)\n\n      routeRef.current = line\n\n      // Fit the map to show the route\n      mapInstanceRef.current.fitBounds(line.getBounds(), {\n        padding: [50, 50],\n      })\n    } catch (error) {\n      console.error(\"Error drawing route:\", error)\n    }\n  }\n\n  return <div ref={mapRef} className=\"map-container\"></div>\n}\n\nexport default Map\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}