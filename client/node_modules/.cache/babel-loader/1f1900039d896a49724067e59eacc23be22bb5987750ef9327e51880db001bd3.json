{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"D:\\\\mern\\\\cab-booking-app\\\\client\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [userType, setUserType] = useState(null); // 'user', 'driver', or 'admin'\n\n  useEffect(() => {\n    // Check if user is logged in\n    const checkLoggedIn = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n        const type = localStorage.getItem(\"userType\");\n        if (token) {\n          // Set auth token header\n          axios.defaults.headers.common[\"x-auth-token\"] = token;\n\n          // Verify token and get user data\n          let res;\n          if (type === \"driver\") {\n            res = await axios.get(\"/api/drivers/me\");\n            setUserType(\"driver\");\n          } else if (type === \"admin\") {\n            res = await axios.get(\"/api/admin/me\");\n            setUserType(\"admin\");\n          } else {\n            res = await axios.get(\"/api/auth\");\n            setUserType(\"user\");\n          }\n          setUser(res.data);\n        }\n      } catch (err) {\n        // If token is invalid, remove it\n        localStorage.removeItem(\"token\");\n        localStorage.removeItem(\"userType\");\n        delete axios.defaults.headers.common[\"x-auth-token\"];\n      }\n      setLoading(false);\n    };\n    checkLoggedIn();\n  }, []);\n  const login = async (email, password, type = \"user\") => {\n    try {\n      let res;\n      if (type === \"driver\") {\n        res = await axios.post(\"/api/drivers/login\", {\n          email,\n          password\n        });\n        setUserType(\"driver\");\n      } else if (type === \"admin\") {\n        res = await axios.post(\"/api/admin/login\", {\n          email,\n          password\n        });\n        setUserType(\"admin\");\n      } else {\n        res = await axios.post(\"/api/auth/login\", {\n          email,\n          password\n        });\n        setUserType(\"user\");\n      }\n\n      // Save token and set user\n      localStorage.setItem(\"token\", res.data.token);\n      localStorage.setItem(\"userType\", type);\n      axios.defaults.headers.common[\"x-auth-token\"] = res.data.token;\n\n      // Get user data\n      let userRes;\n      if (type === \"driver\") {\n        userRes = await axios.get(\"/api/drivers/me\");\n      } else if (type === \"admin\") {\n        userRes = await axios.get(\"/api/admin/me\");\n      } else {\n        userRes = await axios.get(\"/api/auth\");\n      }\n      setUser(userRes.data);\n      return {\n        success: true\n      };\n    } catch (err) {\n      var _err$response, _err$response$data;\n      return {\n        success: false,\n        error: ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.msg) || \"Login failed\"\n      };\n    }\n  };\n  const register = async (name, email, password, phone, type = \"user\") => {\n    try {\n      let res;\n      if (type === \"driver\") {\n        res = await axios.post(\"/api/drivers\", {\n          name,\n          email,\n          password,\n          phone\n        });\n        setUserType(\"driver\");\n      } else {\n        res = await axios.post(\"/api/users\", {\n          name,\n          email,\n          password,\n          phone\n        });\n        setUserType(\"user\");\n      }\n\n      // Save token and set user\n      localStorage.setItem(\"token\", res.data.token);\n      localStorage.setItem(\"userType\", type);\n      axios.defaults.headers.common[\"x-auth-token\"] = res.data.token;\n\n      // Get user data\n      let userRes;\n      if (type === \"driver\") {\n        userRes = await axios.get(\"/api/drivers/me\");\n      } else {\n        userRes = await axios.get(\"/api/auth\");\n      }\n      setUser(userRes.data);\n      return {\n        success: true\n      };\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      return {\n        success: false,\n        error: ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.msg) || \"Registration failed\"\n      };\n    }\n  };\n  const updateDriverStatus = async isAvailable => {\n    try {\n      if (userType !== \"driver\") {\n        return {\n          success: false,\n          error: \"Not authorized\"\n        };\n      }\n      const res = await axios.put(\"/api/drivers/status\", {\n        isAvailable\n      });\n\n      // Update user state with new status\n      setUser({\n        ...user,\n        isAvailable\n      });\n      return {\n        success: true\n      };\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      return {\n        success: false,\n        error: ((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.msg) || \"Failed to update status\"\n      };\n    }\n  };\n  const logout = () => {\n    // Remove token from storage and state\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"userType\");\n    delete axios.defaults.headers.common[\"x-auth-token\"];\n    setUser(null);\n    setUserType(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loading,\n      userType,\n      login,\n      register,\n      logout,\n      updateDriverStatus\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"QpnIIh91nJOppIb6XNP9olWEHx0=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","user","setUser","loading","setLoading","userType","setUserType","checkLoggedIn","token","localStorage","getItem","type","defaults","headers","common","res","get","data","err","removeItem","login","email","password","post","setItem","userRes","success","_err$response","_err$response$data","error","response","msg","register","name","phone","_err$response2","_err$response2$data","updateDriverStatus","isAvailable","put","_err$response3","_err$response3$data","logout","Provider","value","fileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/mern/cab-booking-app/client/src/context/AuthContext.js"],"sourcesContent":["\"use client\"\n\nimport { createContext, useState, useEffect } from \"react\"\nimport axios from \"axios\"\n\nexport const AuthContext = createContext()\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null)\n  const [loading, setLoading] = useState(true)\n  const [userType, setUserType] = useState(null) // 'user', 'driver', or 'admin'\n\n  useEffect(() => {\n    // Check if user is logged in\n    const checkLoggedIn = async () => {\n      try {\n        const token = localStorage.getItem(\"token\")\n        const type = localStorage.getItem(\"userType\")\n\n        if (token) {\n          // Set auth token header\n          axios.defaults.headers.common[\"x-auth-token\"] = token\n\n          // Verify token and get user data\n          let res\n          if (type === \"driver\") {\n            res = await axios.get(\"/api/drivers/me\")\n            setUserType(\"driver\")\n          } else if (type === \"admin\") {\n            res = await axios.get(\"/api/admin/me\")\n            setUserType(\"admin\")\n          } else {\n            res = await axios.get(\"/api/auth\")\n            setUserType(\"user\")\n          }\n          setUser(res.data)\n        }\n      } catch (err) {\n        // If token is invalid, remove it\n        localStorage.removeItem(\"token\")\n        localStorage.removeItem(\"userType\")\n        delete axios.defaults.headers.common[\"x-auth-token\"]\n      }\n\n      setLoading(false)\n    }\n\n    checkLoggedIn()\n  }, [])\n\n  const login = async (email, password, type = \"user\") => {\n    try {\n      let res\n      if (type === \"driver\") {\n        res = await axios.post(\"/api/drivers/login\", { email, password })\n        setUserType(\"driver\")\n      } else if (type === \"admin\") {\n        res = await axios.post(\"/api/admin/login\", { email, password })\n        setUserType(\"admin\")\n      } else {\n        res = await axios.post(\"/api/auth/login\", { email, password })\n        setUserType(\"user\")\n      }\n\n      // Save token and set user\n      localStorage.setItem(\"token\", res.data.token)\n      localStorage.setItem(\"userType\", type)\n      axios.defaults.headers.common[\"x-auth-token\"] = res.data.token\n\n      // Get user data\n      let userRes\n      if (type === \"driver\") {\n        userRes = await axios.get(\"/api/drivers/me\")\n      } else if (type === \"admin\") {\n        userRes = await axios.get(\"/api/admin/me\")\n      } else {\n        userRes = await axios.get(\"/api/auth\")\n      }\n      setUser(userRes.data)\n\n      return { success: true }\n    } catch (err) {\n      return {\n        success: false,\n        error: err.response?.data?.msg || \"Login failed\",\n      }\n    }\n  }\n\n  const register = async (name, email, password, phone, type = \"user\") => {\n    try {\n      let res\n      if (type === \"driver\") {\n        res = await axios.post(\"/api/drivers\", { name, email, password, phone })\n        setUserType(\"driver\")\n      } else {\n        res = await axios.post(\"/api/users\", { name, email, password, phone })\n        setUserType(\"user\")\n      }\n\n      // Save token and set user\n      localStorage.setItem(\"token\", res.data.token)\n      localStorage.setItem(\"userType\", type)\n      axios.defaults.headers.common[\"x-auth-token\"] = res.data.token\n\n      // Get user data\n      let userRes\n      if (type === \"driver\") {\n        userRes = await axios.get(\"/api/drivers/me\")\n      } else {\n        userRes = await axios.get(\"/api/auth\")\n      }\n      setUser(userRes.data)\n\n      return { success: true }\n    } catch (err) {\n      return {\n        success: false,\n        error: err.response?.data?.msg || \"Registration failed\",\n      }\n    }\n  }\n\n  const updateDriverStatus = async (isAvailable) => {\n    try {\n      if (userType !== \"driver\") {\n        return { success: false, error: \"Not authorized\" }\n      }\n\n      const res = await axios.put(\"/api/drivers/status\", { isAvailable })\n\n      // Update user state with new status\n      setUser({ ...user, isAvailable })\n\n      return { success: true }\n    } catch (err) {\n      return {\n        success: false,\n        error: err.response?.data?.msg || \"Failed to update status\",\n      }\n    }\n  }\n\n  const logout = () => {\n    // Remove token from storage and state\n    localStorage.removeItem(\"token\")\n    localStorage.removeItem(\"userType\")\n    delete axios.defaults.headers.common[\"x-auth-token\"]\n    setUser(null)\n    setUserType(null)\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user,\n        loading,\n        userType,\n        login,\n        register,\n        logout,\n        updateDriverStatus,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  )\n}\n"],"mappings":"AAAA,YAAY;;AAAA,IAAAA,YAAA;EAAAC,EAAA,GAAAC,YAAA;AAEZ,SAASC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAV,EAAA;EAC5C,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC,EAAC;;EAE/CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMa,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC3C,MAAMC,IAAI,GAAGF,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;QAE7C,IAAIF,KAAK,EAAE;UACT;UACAb,KAAK,CAACiB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,cAAc,CAAC,GAAGN,KAAK;;UAErD;UACA,IAAIO,GAAG;UACP,IAAIJ,IAAI,KAAK,QAAQ,EAAE;YACrBI,GAAG,GAAG,MAAMpB,KAAK,CAACqB,GAAG,CAAC,iBAAiB,CAAC;YACxCV,WAAW,CAAC,QAAQ,CAAC;UACvB,CAAC,MAAM,IAAIK,IAAI,KAAK,OAAO,EAAE;YAC3BI,GAAG,GAAG,MAAMpB,KAAK,CAACqB,GAAG,CAAC,eAAe,CAAC;YACtCV,WAAW,CAAC,OAAO,CAAC;UACtB,CAAC,MAAM;YACLS,GAAG,GAAG,MAAMpB,KAAK,CAACqB,GAAG,CAAC,WAAW,CAAC;YAClCV,WAAW,CAAC,MAAM,CAAC;UACrB;UACAJ,OAAO,CAACa,GAAG,CAACE,IAAI,CAAC;QACnB;MACF,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZ;QACAT,YAAY,CAACU,UAAU,CAAC,OAAO,CAAC;QAChCV,YAAY,CAACU,UAAU,CAAC,UAAU,CAAC;QACnC,OAAOxB,KAAK,CAACiB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,cAAc,CAAC;MACtD;MAEAV,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC;IAEDG,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMa,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,EAAEX,IAAI,GAAG,MAAM,KAAK;IACtD,IAAI;MACF,IAAII,GAAG;MACP,IAAIJ,IAAI,KAAK,QAAQ,EAAE;QACrBI,GAAG,GAAG,MAAMpB,KAAK,CAAC4B,IAAI,CAAC,oBAAoB,EAAE;UAAEF,KAAK;UAAEC;QAAS,CAAC,CAAC;QACjEhB,WAAW,CAAC,QAAQ,CAAC;MACvB,CAAC,MAAM,IAAIK,IAAI,KAAK,OAAO,EAAE;QAC3BI,GAAG,GAAG,MAAMpB,KAAK,CAAC4B,IAAI,CAAC,kBAAkB,EAAE;UAAEF,KAAK;UAAEC;QAAS,CAAC,CAAC;QAC/DhB,WAAW,CAAC,OAAO,CAAC;MACtB,CAAC,MAAM;QACLS,GAAG,GAAG,MAAMpB,KAAK,CAAC4B,IAAI,CAAC,iBAAiB,EAAE;UAAEF,KAAK;UAAEC;QAAS,CAAC,CAAC;QAC9DhB,WAAW,CAAC,MAAM,CAAC;MACrB;;MAEA;MACAG,YAAY,CAACe,OAAO,CAAC,OAAO,EAAET,GAAG,CAACE,IAAI,CAACT,KAAK,CAAC;MAC7CC,YAAY,CAACe,OAAO,CAAC,UAAU,EAAEb,IAAI,CAAC;MACtChB,KAAK,CAACiB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,cAAc,CAAC,GAAGC,GAAG,CAACE,IAAI,CAACT,KAAK;;MAE9D;MACA,IAAIiB,OAAO;MACX,IAAId,IAAI,KAAK,QAAQ,EAAE;QACrBc,OAAO,GAAG,MAAM9B,KAAK,CAACqB,GAAG,CAAC,iBAAiB,CAAC;MAC9C,CAAC,MAAM,IAAIL,IAAI,KAAK,OAAO,EAAE;QAC3Bc,OAAO,GAAG,MAAM9B,KAAK,CAACqB,GAAG,CAAC,eAAe,CAAC;MAC5C,CAAC,MAAM;QACLS,OAAO,GAAG,MAAM9B,KAAK,CAACqB,GAAG,CAAC,WAAW,CAAC;MACxC;MACAd,OAAO,CAACuB,OAAO,CAACR,IAAI,CAAC;MAErB,OAAO;QAAES,OAAO,EAAE;MAAK,CAAC;IAC1B,CAAC,CAAC,OAAOR,GAAG,EAAE;MAAA,IAAAS,aAAA,EAAAC,kBAAA;MACZ,OAAO;QACLF,OAAO,EAAE,KAAK;QACdG,KAAK,EAAE,EAAAF,aAAA,GAAAT,GAAG,CAACY,QAAQ,cAAAH,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcV,IAAI,cAAAW,kBAAA,uBAAlBA,kBAAA,CAAoBG,GAAG,KAAI;MACpC,CAAC;IACH;EACF,CAAC;EAED,MAAMC,QAAQ,GAAG,MAAAA,CAAOC,IAAI,EAAEZ,KAAK,EAAEC,QAAQ,EAAEY,KAAK,EAAEvB,IAAI,GAAG,MAAM,KAAK;IACtE,IAAI;MACF,IAAII,GAAG;MACP,IAAIJ,IAAI,KAAK,QAAQ,EAAE;QACrBI,GAAG,GAAG,MAAMpB,KAAK,CAAC4B,IAAI,CAAC,cAAc,EAAE;UAAEU,IAAI;UAAEZ,KAAK;UAAEC,QAAQ;UAAEY;QAAM,CAAC,CAAC;QACxE5B,WAAW,CAAC,QAAQ,CAAC;MACvB,CAAC,MAAM;QACLS,GAAG,GAAG,MAAMpB,KAAK,CAAC4B,IAAI,CAAC,YAAY,EAAE;UAAEU,IAAI;UAAEZ,KAAK;UAAEC,QAAQ;UAAEY;QAAM,CAAC,CAAC;QACtE5B,WAAW,CAAC,MAAM,CAAC;MACrB;;MAEA;MACAG,YAAY,CAACe,OAAO,CAAC,OAAO,EAAET,GAAG,CAACE,IAAI,CAACT,KAAK,CAAC;MAC7CC,YAAY,CAACe,OAAO,CAAC,UAAU,EAAEb,IAAI,CAAC;MACtChB,KAAK,CAACiB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,cAAc,CAAC,GAAGC,GAAG,CAACE,IAAI,CAACT,KAAK;;MAE9D;MACA,IAAIiB,OAAO;MACX,IAAId,IAAI,KAAK,QAAQ,EAAE;QACrBc,OAAO,GAAG,MAAM9B,KAAK,CAACqB,GAAG,CAAC,iBAAiB,CAAC;MAC9C,CAAC,MAAM;QACLS,OAAO,GAAG,MAAM9B,KAAK,CAACqB,GAAG,CAAC,WAAW,CAAC;MACxC;MACAd,OAAO,CAACuB,OAAO,CAACR,IAAI,CAAC;MAErB,OAAO;QAAES,OAAO,EAAE;MAAK,CAAC;IAC1B,CAAC,CAAC,OAAOR,GAAG,EAAE;MAAA,IAAAiB,cAAA,EAAAC,mBAAA;MACZ,OAAO;QACLV,OAAO,EAAE,KAAK;QACdG,KAAK,EAAE,EAAAM,cAAA,GAAAjB,GAAG,CAACY,QAAQ,cAAAK,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAclB,IAAI,cAAAmB,mBAAA,uBAAlBA,mBAAA,CAAoBL,GAAG,KAAI;MACpC,CAAC;IACH;EACF,CAAC;EAED,MAAMM,kBAAkB,GAAG,MAAOC,WAAW,IAAK;IAChD,IAAI;MACF,IAAIjC,QAAQ,KAAK,QAAQ,EAAE;QACzB,OAAO;UAAEqB,OAAO,EAAE,KAAK;UAAEG,KAAK,EAAE;QAAiB,CAAC;MACpD;MAEA,MAAMd,GAAG,GAAG,MAAMpB,KAAK,CAAC4C,GAAG,CAAC,qBAAqB,EAAE;QAAED;MAAY,CAAC,CAAC;;MAEnE;MACApC,OAAO,CAAC;QAAE,GAAGD,IAAI;QAAEqC;MAAY,CAAC,CAAC;MAEjC,OAAO;QAAEZ,OAAO,EAAE;MAAK,CAAC;IAC1B,CAAC,CAAC,OAAOR,GAAG,EAAE;MAAA,IAAAsB,cAAA,EAAAC,mBAAA;MACZ,OAAO;QACLf,OAAO,EAAE,KAAK;QACdG,KAAK,EAAE,EAAAW,cAAA,GAAAtB,GAAG,CAACY,QAAQ,cAAAU,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAcvB,IAAI,cAAAwB,mBAAA,uBAAlBA,mBAAA,CAAoBV,GAAG,KAAI;MACpC,CAAC;IACH;EACF,CAAC;EAED,MAAMW,MAAM,GAAGA,CAAA,KAAM;IACnB;IACAjC,YAAY,CAACU,UAAU,CAAC,OAAO,CAAC;IAChCV,YAAY,CAACU,UAAU,CAAC,UAAU,CAAC;IACnC,OAAOxB,KAAK,CAACiB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,cAAc,CAAC;IACpDZ,OAAO,CAAC,IAAI,CAAC;IACbI,WAAW,CAAC,IAAI,CAAC;EACnB,CAAC;EAED,oBACET,OAAA,CAACC,WAAW,CAAC6C,QAAQ;IACnBC,KAAK,EAAE;MACL3C,IAAI;MACJE,OAAO;MACPE,QAAQ;MACRe,KAAK;MACLY,QAAQ;MACRU,MAAM;MACNL;IACF,CAAE;IAAArC,QAAA,EAEDA;EAAQ;IAAA6C,QAAA,EAAAxD,YAAA;IAAAyD,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAAzD,EAAA,CAhKYS,YAAY;AAAAiD,EAAA,GAAZjD,YAAY;AAAA,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}